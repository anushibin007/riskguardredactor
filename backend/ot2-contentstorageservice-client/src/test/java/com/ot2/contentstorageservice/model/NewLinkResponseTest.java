/*
 * Content Storage Service API
 * Content Storage Service provides storage and indexing for content and documents, which includes encryption/decryption of the content, anti-virus and authorization checks on upload and download. It is used by Content Metadata Service (CMS) when storing document objects, CMS will provide authorization management.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ot2.contentstorageservice.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ot2.contentstorageservice.model.SharableLinks;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for NewLinkResponse
 */
public class NewLinkResponseTest {
    private final NewLinkResponse model = new NewLinkResponse();

    /**
     * Model tests for NewLinkResponse
     */
    @Test
    public void testNewLinkResponse() {
        // TODO: test NewLinkResponse
    }

    /**
     * Test the property 'issuedToken'
     */
    @Test
    public void issuedTokenTest() {
        // TODO: test issuedToken
    }

    /**
     * Test the property 'uri'
     */
    @Test
    public void uriTest() {
        // TODO: test uri
    }

    /**
     * Test the property 'objectId'
     */
    @Test
    public void objectIdTest() {
        // TODO: test objectId
    }

    /**
     * Test the property 'serviceId'
     */
    @Test
    public void serviceIdTest() {
        // TODO: test serviceId
    }

    /**
     * Test the property 'expiry'
     */
    @Test
    public void expiryTest() {
        // TODO: test expiry
    }

    /**
     * Test the property 'secured'
     */
    @Test
    public void securedTest() {
        // TODO: test secured
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'links'
     */
    @Test
    public void linksTest() {
        // TODO: test links
    }

}
