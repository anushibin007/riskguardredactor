/*
 * Content Storage Service API
 * Content Storage Service provides storage and indexing for content and documents, which includes encryption/decryption of the content, anti-virus and authorization checks on upload and download. It is used by Content Metadata Service (CMS) when storing document objects, CMS will provide authorization management.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ot2.contentstorageservice.api;

import com.ot2.contentstorageservice.invoker.ApiException;
import com.ot2.contentstorageservice.model.Error;
import com.ot2.contentstorageservice.model.HttpProblem;
import com.ot2.contentstorageservice.model.TenantUsageResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ContentUsageApi
 */
@Disabled
public class ContentUsageApiTest {

    private final ContentUsageApi api = new ContentUsageApi();

    /**
     * Get total storage used by a tenant
     *
     * Get total storage used by a tenant
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usageContentTenantTest() throws ApiException {
        String tenantId = null;
        String units = null;
        TenantUsageResponse response = api.usageContentTenant(tenantId, units);
        // TODO: test validations
    }

}
