openapi: 3.0.3
info:
  description: |-
    OpenText Core Capture Services are a set of RESTful web service interfaces that provides capture functionality. Being developed in a purely RESTful style, Core Capture Services are easier to consume for the purposes of writing custom clients.

    Core Capture Services identifies resources by Uniform Resource Identifiers (URIs). It defines specific media types to represent resources and drives application state transfers by using link relations. It uses a limited number of HTTP standard methods (GET, POST, and DELETE) to manipulate these resources over the HTTP protocol.

    Core Capture Services (hereafter simply called, "service") supports only the JSON format for resource representation. JavaScript Object Notation (JSON) is a lightweight data interchange format based on a subset of the JavaScript Programming Language standard.
  title: Core Capture Services
  version: "23.3"
servers:
- description: OpenText OCP US Production
  url: https://capture.ot2.opentext.com/cp-rest/v2
- description: OpenText OCP EU Production
  url: https://capture.ot2.opentext.eu/cp-rest/v2
- description: OpenText Developer Build & Test
  url: https://na-1-dev.api.opentext.com/capture/cp-rest/v2
- description: OpenText Developer North America
  url: https://na-1.api.opentext.com/capture/cp-rest/v2
- description: OpenText Developer Europe
  url: https://eu-1.api.opentext.com/capture/cp-rest/v2
tags:
- description: The Home Document is an entry point to the Core Capture Services. It
    is available to any caller. It is retrieved by performing an HTTP GET on the base
    installation path.
  name: Home
- description: "The Session resource will provide the URI for ending the session.\
    \ This clears all the files and metadata in your session and allows for more efficient\
    \ processing for future sessions related to your subscription. Some data centers\
    \ have limits on the number of open sessions you can have. So, when you are done\
    \ with your session, then it is important to end it. This will not invalidate\
    \ your access tokens. So, if you call the service with the same service again\
    \ after ending the session, a new session will automatically be created. Every\
    \ token associated with the same refresh token shares a unique identifier inside\
    \ the token. There is a one-to-one relationship between that unique identifier\
    \ and a session on the server. So if you have been calling the services with an\
    \ access token and then obtain another from the same refresh token, it will still\
    \ be associated with the same session. An access token can only support one call\
    \ at a time and thus cannot be called simultaneously from more than one thread\
    \ or process."
  name: Session
- description: The server maintains different tables that provide information about
    key pieces of data to authenticated users. These tables are provided in the Tables
    Resource.
  name: Tables
- description: This resource provides a list of Document Types available in the system.
    Document Types are created using the Designer.
  name: Document Types
- description: "The Files resource is used to create a stage file. Real-Time Services\
    \ can use stage files referenced in Service Requests and so can Batches. The benefit\
    \ of creating a stage file is that it allows them to be referenced in more than\
    \ one Service Request for any Real-Time Service as well as in create and export\
    \ batch. In addition, a stage file can be sent whole or chunked using binary or\
    \ base64 encoding to the server to allow the client better control over sending\
    \ large files (see below for an example). Responses to file uploads will always\
    \ provide a unique file ID in which to reference the file for later use in Service\
    \ Requests. All stage files created by uploading files to Server or by Real-Time\
    \ Services returning the resulting files, must be deleted when they are no logner\
    \ required."
  name: Files
- description: "Through the Capture Service you can create batches on server to export\
    \ them to your backend server. To accomplish this you submit files to server,\
    \ create a Batch with values in it and then submit the Batch to server to export\
    \ it to your backend server. Supported backend servers to export Batches are any\
    \ CMIS compliant content server, OpenText Intelligent Capture Server, FTP server,\
    \ and OpenText Document ApplicationXtender server."
  name: Batch
- description: |-
    Real-Time Services are a collection of special service operations for authenticated users that can be performed immediately on data you submit
    in an ad hoc fashion without requiring the construction of a workflow. Each of these Real-Time Services will take a Service Request, which is a set of
    Service Properties along with the Request Item information. The Service Properties describe the options that a service should use when performing its
    operation. The Request Item information describes all of the data and files that the Real-Time Service should perform its operation on.

    A Service Request can simply be a collection of files, or files and data, or a hierarchical collection of files and/or data. It can be as simple or as
    complex as needed for the Real-Time Service you are using. The Service Request is performed by a single POST to the Services resource URI. If you need
    file chunking or you want to use the same file for many different Service Requests, then upload the files prior to submitting the Service Request by
    uploading them to the Files resource. Then, you can reference the file IDs for those uploaded files in the Service Request.

    **Service Properties**

    Every Service Request needs to include the Service Properties appropriate for the service. These define the options you want the Real-Time Service to use
    when performing its operation. These are provided in the serviceProps property. The list of Real-Time Services that are available along with their supported
    Service Properties are listed in the Real-Time Service Descriptions section. Each of the Real-Time Services provide a description of its operation, a list of
    Service Properties that can be used, and information about what type of data is expected.
  name: Real-Time Services
paths:
  /:
    get:
      description: "The Home Document is an entry point to the Core Capture Services.\
        \ It is available to any caller. Its main purposes it to provide discovery\
        \ of the URIs necessary to interact with the service. It is retrieved by performing\
        \ an HTTP GET on the base installation path. So for example if the REST service\
        \ was installed into https://{host}/cp-rest/v2, then performing a GET on this\
        \ URI would return the Home Document. Its main purposes is to provide discovery\
        \ of the URIs necessary to interact with the service. All clients must start\
        \ from the Home Document and follow the hrefs given in the link relations\
        \ to the resources desired. This is important to ensure that your client applications\
        \ will always work regardless of the URI changes that may take place under\
        \ different deployment configurations of the service."
      parameters:
      - description: "This can be left without an assignment or you can use itself,\
          \ suppress_response_codes=suppress_response_codes"
        explode: true
        in: query
        name: suppress_response_codes
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              example:
                _links:
                  urn:eim:linkrel:session:
                    href: "https://{host}/cp-rest/v2/session"
                  urn:eim:linkrel:tables:
                    href: "https://{host}/cp-rest/v2/session/tables"
                  urn:eim:linkrel:data-batches:
                    href: "https://{host}/cp-rest/v2/session/batches"
                  urn:eim:linkrel:files:
                    href: "https://{host}/cp-rest/v2/session/files"
                  urn:eim:linkrel:services:
                    href: "https://{host}/cp-rest/v2/session/services"
                  urn:eim:linkrel:doctypes:
                    href: "https://{host}/cp-rest/v2/session/doctypes"
                  oauth2-token:
                    href: "https://{auth-host}/oauth/token"
                  oauth2-authorize:
                    href: "https://{auth-host}/oauth/authorize"
                  about:
                    href: "https://{host}/cp-rest/v2/about"
              schema:
                $ref: '#/components/schemas/__get_200_response'
          description: OK
        "415":
          content:
            application/json:
              example:
                returnStatus:
                  status: 415
                  code: ER8016
                  message: "[M8016] The Accept type is not supported for this request."
                  server: WS-Sb29a7dd631e94af5a5439148ea7a5bffHS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Unsupported Media Type
        "500":
          description: Internal Server Error
      security: []
      summary: The Home Document is an entry point to the Core Capture Services.
      tags:
      - Home
      x-accepts: application/json
  /about:
    get:
      description: This resource provides product information about the Services installation
        to authenticated users.
      parameters:
      - description: "This can be left without an assignment or you can use itself,\
          \ suppress_response_codes=suppress_response_codes"
        explode: true
        in: query
        name: suppress_response_codes
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 200
                  code: OK0000
                  message: ""
                  server: WS-Sb29a7dd631e94af5a5439148ea7a5bffHS
                serviceName: Open Text Core Capture Services
                productName: Open Text Core Capture Services
                copyright: "Copyright © 2020 Open Text. All rights reserved. This\
                  \ software is protected, without limitation, by copyright law and\
                  \ international treaties. Use of this software and the intellectual\
                  \ property contained therein is expressly limited to the terms and\
                  \ conditions of the License Agreement under which it is provided\
                  \ by or on behalf of Open Text."
                serviceVersion: 2.6.0.0
                buildVersion: 20.2.425.7585
                productVersion: 20.2.0.0
                schemaVersion: 2.6.0.0
                designerVersion: 20.2.52
                serverDate: 2020-04-27T19:52:19.4462961Z
                serverId: WS-S8c7ec8597c2a4e13bc3db7b7335816fb
                minDesignerVersion: 18.3.0
              schema:
                $ref: '#/components/schemas/_about_get_200_response'
          description: OK
        "401":
          description: Unauthorized
        "403":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 403
                  code: ER8013
                  message: "[M8013] The user does not have sufficient permissions\
                    \ for the operation."
                  server: WS-S5fcb9d7368af42f0af244010e3ad5907HS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Forbidden
        "415":
          content:
            application/json:
              example:
                returnStatus:
                  status: 415
                  code: ER8016
                  message: "[M8016] The Accept type is not supported for this request."
                  server: WS-Sb29a7dd631e94af5a5439148ea7a5bffHS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Unsupported Media Type
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error
      security:
      - na-1-dev.api.opentext.com: []
      summary: Provides product version information.
      tags:
      - Home
      x-accepts: application/json
  /session:
    delete:
      description: "As long as the session is still active, deleting your session\
        \ will return HTTP status code 200. If the session has expired, then a 401\
        \ Unauthorized response is sent by the server."
      parameters:
      - description: "This can be left without an assignment or you can use itself,\
          \ suppress_response_codes=suppress_response_codes"
        explode: true
        in: query
        name: suppress_response_codes
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                type: string
          description: Successfully logged off
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - na-1-dev.api.opentext.com: []
      summary: Deletes your session data.
      tags:
      - Session
      x-accepts: application/hal+json
    get:
      description: The Session resource will provide the URI for ending the session.
        This clears all the files and metadata in your session and allows for more
        efficient processing for future sessions related to your subscription.
      parameters:
      - description: "This can be left without an assignment or you can use itself,\
          \ suppress_response_codes=suppress_response_codes"
        explode: true
        in: query
        name: suppress_response_codes
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 200
                  code: OK0000
                  message: ""
                  server: WS-S0fe013423a0d4fd9be9ad906f5fcce6aIZ
                id: "https://{host}/cp-rest/v2/session"
                title: Session
                _links:
                  self:
                    href: "https://{host}/cp-rest/v2/session"
                  urn:eim:linkrel:logoff:
                    href: "https://{host}/cp-rest/v2/session"
              schema:
                $ref: '#/components/schemas/_session_get_200_response'
          description: OK
        "401":
          description: Unauthorized
        "415":
          content:
            application/json:
              example:
                returnStatus:
                  status: 415
                  code: ER8016
                  message: "[M8016] The Accept type is not supported for this request."
                  server: WS-Sb29a7dd631e94af5a5439148ea7a5bffHS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Unsupported Media Type
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error
      security: []
      summary: Retrieves the Session resource.
      tags:
      - Session
      x-accepts: application/json
  /session/tables:
    get:
      description: The server maintains different tables that provide information
        about key pieces of data to authenticated users.
      parameters:
      - example: D
        explode: true
        in: query
        name: Env
        required: true
        schema:
          $ref: '#/components/schemas/env'
        style: form
      - description: "This can be left without an assignment or you can use itself,\
          \ suppress_response_codes=suppress_response_codes"
        explode: true
        in: query
        name: suppress_response_codes
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 200
                  code: OK0000
                  message: ""
                  server: WS-Sa6c3aec13763493588d3bfeb47249333IS
                id: "https://{host}/cp-rest/v2/session/tables"
                title: Tables
                _links:
                  self:
                    href: "https://{host}/cp-rest/v2/session/tables"
                _embedded:
                  collection:
                  - id: "https://{host}/cp-rest/v2/session/tables/exportprofiles"
                    title: ExportProfiles
                    updated: 2017-01-11T23:28:59.8787474Z
                    _links:
                      self:
                        href: "https://{host}/cp-rest/v2/session/tables/exportprofiles"
                  - id: "https://{host}/cp-rest/v2/session/tables/imageprocessingprofiles"
                    title: ImageProcessingProfiles
                    updated: 2017-01-11T23:28:59.8787474Z
                    _links:
                      self:
                        href: "https://{host}/cp-rest/v2/session/tables/imageprocessingprofiles"
              schema:
                $ref: '#/components/schemas/_session_tables_get_200_response'
          description: OK
        "401":
          description: Unauthorized
        "403":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 403
                  code: ER8013
                  message: "[M8013] The user does not have sufficient permissions\
                    \ for the operation."
                  server: WS-S5fcb9d7368af42f0af244010e3ad5907HS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Forbidden
        "415":
          content:
            application/json:
              example:
                returnStatus:
                  status: 415
                  code: ER8016
                  message: "[M8016] The Accept type is not supported for this request."
                  server: WS-Sb29a7dd631e94af5a5439148ea7a5bffHS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Unsupported Media Type
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error
      security:
      - na-1-dev.api.opentext.com: []
      summary: Returns a list of available tables for the given environment.
      tags:
      - Tables
      x-accepts: application/json
  /session/tables/{tableId}:
    get:
      description: The Table Resource pertains to a specific table from the set of
        available tables on the server.
      parameters:
      - explode: false
        in: path
        name: tableId
        required: true
        schema:
          enum:
          - exportProfiles
          - imageProcessingProfiles
          type: string
        style: simple
      - description: |-
          Fields or properties to return.

          **Syntax:** ?view=<:view-name | comma-delim-field-list>

          **Note:** A view is followed by either a view name preceded by a colon or a list of fields. These are mutually exclusive. Two predefined views are provided - ":all" and ":default". Both of these are equivalent and will return all columns for the data. If this query parameter is not provided, then the result will include all column data.
        example: "name,createtime"
        explode: true
        in: query
        name: view
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Used to sort the result.

          **Syntax:** ?sort=<field [desc | asc]>[,REPEATABLE]

          **Note:** Sort is followed by a comma-separated list of fields and each field can have an optional sort order separated by a space. If the sort order is not specified, then the default sort order is ASC. If this query parameter is not provided at all, then the result will be sorted based on its first column in ascending order.
        example: createtime asc
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - example: D
        explode: true
        in: query
        name: env
        required: false
        schema:
          $ref: '#/components/schemas/env'
        style: form
      - description: "This can be left without an assignment or you can use itself,\
          \ suppress_response_codes=suppress_response_codes"
        explode: true
        in: query
        name: suppress_response_codes
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 200
                  code: OK0000
                  message: ""
                  server: WS-S60ef74551ec74116b91f94e491d1d0edIS
                id: "https://{host}/cp-rest/v2/session/tables/exportprofiles"
                title: ExportProfile
                updated: 2016-10-11T23:01:20.5166678Z
                _links:
                  self:
                    href: "https://{host}/cp-rest/v2/session/tables/exportprofiles?env=D"
                content:
                  id: exportprofiles
                  tableName: ExportProfile
                  env: D
                  fieldNames:
                  - Id
                  - Name
                  - Category
                  - LastUpdate
                  - Env
                  - HasImage
                  rows:
                  - - exportprofile-create_pdf_documents
                    - Create PDF Documents
                    - ExportProfile
                    - 2016-06-03T00:18:32.9142549Z
                    - D
                    - false
                  - - exportprofile-newloanapplication
                    - NewLoanApplication
                    - ExportProfile
                    - 2016-05-17T17:10:39.8837938Z
                    - D
                    - false
                  - - exportprofile-sample_advanced_recognition_demo
                    - Sample Advanced Recognition Demo
                    - ExportProfile
                    - 2016-09-24T00:32:28.5453643Z
                    - D
                    - false
              schema:
                $ref: '#/components/schemas/_session_tables__tableId__get_200_response'
          description: OK
        "401":
          description: Unauthorized
        "403":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 403
                  code: ER8013
                  message: "[M8013] The user does not have sufficient permissions\
                    \ for the operation."
                  server: WS-S5fcb9d7368af42f0af244010e3ad5907HS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Forbidden
        "404":
          description: Not Found
        "415":
          content:
            application/json:
              example:
                returnStatus:
                  status: 415
                  code: ER8016
                  message: "[M8016] The Accept type is not supported for this request."
                  server: WS-Sb29a7dd631e94af5a5439148ea7a5bffHS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Unsupported Media Type
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error
      security:
      - na-1-dev.api.opentext.com: []
      summary: Returns the table identified by tableId for the given environment.
      tags:
      - Tables
      x-accepts: application/json
  /session/doctypes:
    get:
      description: This operation returns a feed listing all of the Document Types.
        Document Types are created using the Designer.
      parameters:
      - example: D
        explode: true
        in: query
        name: Env
        required: false
        schema:
          $ref: '#/components/schemas/env'
        style: form
      - description: "This can be left without an assignment or you can use itself,\
          \ suppress_response_codes=suppress_response_codes"
        explode: true
        in: query
        name: suppress_response_codes
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 200
                  code: OK0000
                  message: ""
                  server: WS-S8ac9a1e5c5974e9bbe210e7ed32b5e77IS
                id: "https://{host}/cp-rest/v2/session/doctypes"
                title: DocTypes
                updated: 2017-01-13T22:54:26.7123724Z
                _links:
                  self:
                    href: "https://{host}/cp-rest/v2/session/doctypes?env=D"
                _embedded:
                  collection:
                  - id: "https://{host}/cp-rest/v2/session/doctypes/advancedinvoice"
                    title: AdvancedInvoice
                    updated: 2017-01-13T00:15:12.5208242Z
                    env: D
                    _links:
                      self:
                        href: "https://{host}/cp-rest/v2/session/doctypes/advancedinvoice?env=D"
              schema:
                $ref: '#/components/schemas/_session_doctypes_get_200_response'
          description: OK
        "401":
          description: Unauthorized
        "403":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 403
                  code: ER8013
                  message: "[M8013] The user does not have sufficient permissions\
                    \ for the operation."
                  server: WS-S5fcb9d7368af42f0af244010e3ad5907HS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Forbidden
        "415":
          content:
            application/json:
              example:
                returnStatus:
                  status: 415
                  code: ER8016
                  message: "[M8016] The Accept type is not supported for this request."
                  server: WS-Sb29a7dd631e94af5a5439148ea7a5bffHS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Unsupported Media Type
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error
      security:
      - na-1-dev.api.opentext.com: []
      summary: Returns the list of available Document Types for the given environment.
      tags:
      - Document Types
      x-accepts: application/json
  /session/doctypes/{docType}:
    get:
      description: This resource retrieves a specific Document Type. A Document Type
        is created using the Designer.
      parameters:
      - explode: false
        in: path
        name: docType
        required: true
        schema:
          type: string
        style: simple
      - example: D
        explode: true
        in: query
        name: Env
        required: false
        schema:
          $ref: '#/components/schemas/env'
        style: form
      - description: "This can be left without an assignment or you can use itself,\
          \ suppress_response_codes=suppress_response_codes"
        explode: true
        in: query
        name: suppress_response_codes
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 200
                  code: OK0000
                  message: ""
                  server: WS-S9d85aaf9fd134654be88edc11906fd53IS
                id: "https://{host}/cp-rest/v2/session/doctypes/CorpSource"
                title: CorpSource
                updated: 2016-08-24T22:27:02.1726288Z
                _links:
                  self:
                    href: "https://{host}/cp-rest/v2/session/doctypes/CorpSource?env=D"
                content:
                  id: CorpSource
                  name: CorpSource
                  locale: ""
                  description: ""
                  project: Default
                  env: D
                  fields:
                  - name: InvoiceNumber
                    isArray: false
                    indexFieldType: Number
                    sectionName: SectionTop
                    indexLevel: 1
                    confirmKind: AlwaysConfirm
                    isReadOnly: false
                    isRequired: false
                    minValue: null
                    maxValue: null
                    restrictionMask: ""
                    viewFormat: '#.#########'
                    checkDateFromNow: false
                    uiControlInfo:
                      controlType: TextBox
                      labelText: Invoice No.
                      tooltip: ""
                      choices: []
                      multiLine: false
                      rectangle:
                        left: 610
                        top: 110
                        width: 140
                        height: 20
                      labelRectangle:
                        left: 535
                        top: 109
                        width: 74
                        height: 20
                    isPopulationTrigger: false
                    optionsPopulatedBy: []
                    extractFirstValue: true
                    isCalculationTarget: false
                    sampleRect: ""
                    samplePageId: ""
              schema:
                $ref: '#/components/schemas/_session_doctypes__docType__get_200_response'
          description: OK
        "401":
          description: Unauthorized
        "403":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 403
                  code: ER8013
                  message: "[M8013] The user does not have sufficient permissions\
                    \ for the operation."
                  server: WS-S5fcb9d7368af42f0af244010e3ad5907HS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Forbidden
        "415":
          content:
            application/json:
              example:
                returnStatus:
                  status: 415
                  code: ER8016
                  message: "[M8016] The Accept type is not supported for this request."
                  server: WS-Sb29a7dd631e94af5a5439148ea7a5bffHS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Unsupported Media Type
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error
      security:
      - na-1-dev.api.opentext.com: []
      summary: Returns the Document Type identified by docType for the given environment.
      tags:
      - Document Types
      x-accepts: application/json
  /session/files:
    delete:
      description: |-
        This call deletes all stage files in the session including those returned by service calls. Once called, the deleted files will no longer be available.

        Deleting files accepts a query string parameter, filter, as shown below. Currently, the only value this parameter supports is *, which means all files. This is the only filter value currently supported by the Services and provides for the deletion of all the files in the session.
      parameters:
      - example: '*'
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: "This can be left without an assignment or you can use itself,\
          \ suppress_response_codes=suppress_response_codes"
        explode: true
        in: query
        name: suppress_response_codes
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 200
                  code: OK0000
                  message: ""
                  server: WS-Sb29a7dd631e94af5a5439148ea7a5bffHS
              schema:
                $ref: '#/components/schemas/returnStatusBody'
          description: OK
        "401":
          description: Unauthorized
        "403":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 403
                  code: ER8013
                  message: "[M8013] The user does not have sufficient permissions\
                    \ for the operation."
                  server: WS-S5fcb9d7368af42f0af244010e3ad5907HS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Forbidden
        "415":
          content:
            application/json:
              example:
                returnStatus:
                  status: 415
                  code: ER8016
                  message: "[M8016] The Accept type is not supported for this request."
                  server: WS-Sb29a7dd631e94af5a5439148ea7a5bffHS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Unsupported Media Type
        "500":
          description: Internal Server Error
      security:
      - na-1-dev.api.opentext.com: []
      summary: Deletes all stage files.
      tags:
      - Files
      x-accepts: application/json
    post:
      description: |-
        You can only create one stage file at a time. Upon the first POST a unique fileId will be created by the server. File data can be posted either in base64 encoding as a JSON post or as a binary to the server.

        If you need to chunk this in pieces to the server, then subsequent requests must be made to the URI represented by the src property or the URI provided by the Location header returned from the first chunk. Additional chunks append to the file and you can always retry/re-post the last chunk. The chunks need to be posted without gaps in order to be successful.

        There are two ways to create a stage file:

        - Create the stage file using a JSON post with base64 encoding.

        - Post the file as binary using the appropriate Content-Type.
      parameters:
      - description: "This can be left without an assignment or you can use itself,\
          \ suppress_response_codes=suppress_response_codes"
        explode: true
        in: query
        name: suppress_response_codes
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/hal+json:
            example:
              data: VGhpcyBpcyBvbmx5IGFuIGV4YW1wbGUgb2YgdGhlIGZpcnN0IGNodW5rLg
              contentType: image/jpeg
              offset: 0
            schema:
              $ref: '#/components/schemas/inlineFileRequestBody'
          application/msword:
            example: Binary Data
            schema:
              type: string
          application/octet-stream:
            example: Binary Data
            schema:
              type: string
          application/rtf:
            example: Binary Data
            schema:
              type: string
          application/pdf:
            example: Binary Data
            schema:
              type: string
          image/*:
            example: "{\"value\":\"\\\"src\\\":\\\"/C:/test.tif\\\"\"}"
            schema:
              type: string
          text/plain:
            schema:
              type: string
      responses:
        "201":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 200
                  code: OK0000
                  message: ""
                  server: WS-S842b1bccd3fd4d2e86b33a844adaf5c1
                id: f_128b1931b51643979a2580f5820dec4ftif
                contentType: image/jpeg
                src: "https://{host}/cp-rest/session/v2/files/f_128b1931b51643979a2580f5820dec4fjpg"
                updated: 2016-03-31T22:22:35.1995491Z
              schema:
                $ref: '#/components/schemas/_session_files_post_201_response'
          description: OK or Created
        "401":
          description: Unauthorized
        "403":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 403
                  code: ER8013
                  message: "[M8013] The user does not have sufficient permissions\
                    \ for the operation."
                  server: WS-S5fcb9d7368af42f0af244010e3ad5907HS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Forbidden
        "415":
          content:
            application/json:
              example:
                returnStatus:
                  status: 415
                  code: ER8016
                  message: "[M8016] The Accept type is not supported for this request."
                  server: WS-Sb29a7dd631e94af5a5439148ea7a5bffHS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Unsupported Media Type
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error
      security:
      - na-1-dev.api.opentext.com: []
      summary: Creates a stage file.
      tags:
      - Files
      x-content-type: application/hal+json
      x-accepts: application/json
  /session/files/{fileId}:
    delete:
      description: "An individual file can be deleted. Once deleted, the file can\
        \ no longer be accessed."
      parameters:
      - description: The id of the file
        explode: false
        in: path
        name: fileId
        required: true
        schema:
          type: string
        style: simple
      - description: "This can be left without an assignment or you can use itself,\
          \ suppress_response_codes=suppress_response_codes"
        explode: true
        in: query
        name: suppress_response_codes
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 200
                  code: OK0000
                  message: ""
                  server: WS-Sb29a7dd631e94af5a5439148ea7a5bffHS
              schema:
                $ref: '#/components/schemas/returnStatusBody'
          description: OK
        "401":
          description: Unauthorized
        "403":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 403
                  code: ER8013
                  message: "[M8013] The user does not have sufficient permissions\
                    \ for the operation."
                  server: WS-S5fcb9d7368af42f0af244010e3ad5907HS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Forbidden
        "415":
          content:
            application/json:
              example:
                returnStatus:
                  status: 415
                  code: ER8016
                  message: "[M8016] The Accept type is not supported for this request."
                  server: WS-Sb29a7dd631e94af5a5439148ea7a5bffHS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Unsupported Media Type
        "500":
          description: Internal Server Error
      security:
      - na-1-dev.api.opentext.com: []
      summary: Deletes a stage file.
      tags:
      - Files
      x-accepts: application/json
    get:
      description: Retrieving an actual file that was previously POSTed is simply
        performed by executing a GET on the files URI with the fileId as shown below.
        This will return the actual file data.
      parameters:
      - description: The id of the file
        explode: false
        in: path
        name: fileId
        required: true
        schema:
          type: string
        style: simple
      - description: "This can be left without an assignment or you can use itself,\
          \ suppress_response_codes=suppress_response_codes"
        explode: true
        in: query
        name: suppress_response_codes
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "403":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 403
                  code: ER8013
                  message: "[M8013] The user does not have sufficient permissions\
                    \ for the operation."
                  server: WS-S5fcb9d7368af42f0af244010e3ad5907HS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Forbidden
        "415":
          content:
            application/json:
              example:
                returnStatus:
                  status: 415
                  code: ER8016
                  message: "[M8016] The Accept type is not supported for this request."
                  server: WS-Sb29a7dd631e94af5a5439148ea7a5bffHS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Unsupported Media Type
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error
      security:
      - na-1-dev.api.opentext.com: []
      summary: Retrieves the file identified by the fileId.
      tags:
      - Files
      x-accepts: application/json
    post:
      description: Chunking a file in pieces to the server requires that the POST
        be made to the URI represented by the src property or the URI provided by
        the Location header returned from the first chunk. Additional chunks append
        to the file and you can always retry/re-post the last chunk. Chunking requires
        the data for the file to be sent in base64 or binary encoding. The chunks
        need to be posted without gaps in order to be successful.
      parameters:
      - description: The id of the file
        explode: false
        in: path
        name: fileId
        required: true
        schema:
          type: string
        style: simple
      - description: "This can be left without an assignment or you can use itself,\
          \ suppress_response_codes=suppress_response_codes"
        explode: true
        in: query
        name: suppress_response_codes
        required: false
        schema:
          type: string
        style: form
      - description: Supported response media types
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          enum:
          - application/msword
          - application/octet-stream
          - application/rtf
          - application/pdf
          - image/jpeg
          - image/png
          - image/tiff
          - text/plain
          type: string
        style: simple
      - description: "When using binary upload and chunking the upload, use this parameter\
          \ to provide the range of bytes being uploaded. For e.g. \"bytes 0-19999/60200\"\
          , \"bytes 20000-60199/60200\""
        explode: false
        in: header
        name: Content-Range
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/hal+json:
            example:
              data: VGhpcyBpcyBvbmx5IGFuIGV4YW1wbGUgb2YgdGhlIHNlY29uZCBjaHVuaw
              contentType: image/jpeg
              offset: 59
            schema:
              $ref: '#/components/schemas/inlineFileRequestBody'
          application/msword:
            example: Binary Data
            schema:
              type: string
          application/octet-stream:
            example: Binary Data
            schema:
              type: string
          application/rtf:
            example: Binary Data
            schema:
              type: string
          application/pdf:
            example: Binary Data
            schema:
              type: string
          image/*:
            example: "{\"value\":\"\\\"src\\\":\\\"/C:/test.tif\\\"\"}"
            schema:
              type: string
          text/plain:
            schema:
              type: string
      responses:
        "200":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 200
                  code: OK0000
                  message: ""
                  server: WS-S842b1bccd3fd4d2e86b33a844adaf5c1
                id: f_128b1931b51643979a2580f5820dec4ftif
                contentType: image/jpeg
                src: "https://{host}/cp-rest/session/v2/files/f_128b1931b51643979a2580f5820dec4fjpg"
                updated: 2016-03-31T22:22:35.1995491Z
              schema:
                $ref: '#/components/schemas/_session_files_post_201_response'
          description: OK or Created
        "401":
          description: Unauthorized
        "403":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 403
                  code: ER8013
                  message: "[M8013] The user does not have sufficient permissions\
                    \ for the operation."
                  server: WS-S5fcb9d7368af42f0af244010e3ad5907HS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Forbidden
        "415":
          content:
            application/json:
              example:
                returnStatus:
                  status: 415
                  code: ER8016
                  message: "[M8016] The Accept type is not supported for this request."
                  server: WS-Sb29a7dd631e94af5a5439148ea7a5bffHS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Unsupported Media Type
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error
      security:
      - na-1-dev.api.opentext.com: []
      summary: Appends or retries a stage file chunk.
      tags:
      - Files
      x-content-type: application/hal+json
      x-accepts: application/json
  /session/batches:
    post:
      description: |-
        The Create and Export Batch operation is the last call required to create a batch and submit it to your backend server. First submit all image files to server, then you can use the returned file reference ids to reference files in the Batch nodal information. You can also use the same file reference ids returned by Real-Time service calls.

        The batch name that you use to create a batch has to be unique when being imported into your backend server. To help you accomplish creating unique names you can supply for the "batchName" JSON property any Capture Services Format Expression function (see the Designer Documentation). There are also two additional format tokens you can use for providing unique names - {NextIndex} and {NextId}

        **{NextIndex}** - This will provide a 64 bit integer number that is unique. Example: "batchName":"MyBatch_{NextIndex}" produces on the server MyBatch_1026000000002

        **{NextId}** - This will provide a valid Batch name string that is unique. Example: "batchName":"MyBatch_{NextId}" produces on the server MyBatch_324_1

        Any supported static function in the Capture Services Expression Language (see the Designer Documentation). [<any text>]{[<Format Specification>|]<Expression>}[<any text>] - Using the expression language functions can allow the user of a GUID or unique time string to be a part of the Batch Name. Example: "batchName":"MyBatch_{Tddhhmmss|Now()}_{NextIndex}" produces on the server, MyBatch_09064934_1026000000003. Or "batchName":"MyBatch_{S|CreateGuid(0)}" produces on the server, MyBatch_82fcd238-2fb7-44ac-9acc-a13ce406241d

        **Document type and UimData values in batch:**

        For composing export profile and exporting UimData values, Document type and UimData values must at batch level mentioned below with given names as below.

        **Batch – Level 7:**

        valueName = "Profile "

        valueType = "string"

        value = // Name of the profile.

        **Document – Level 1:**

        valueName = "UimDocumentType"

        valueType = "string"

        value = // This should be a string specifying the document type name.

        valueName = "UimData"

        valueType = "uimdata"

        value = // This should be a UIM Data JSON Object

        valueName = "OutputFile "

        valueType = " file"

        value = // File id for the original PDF to be available for export.

        **Page – Level 0:**

        valueName = "OutputImage"

        valueType = "file"

        value = // file id for the image to be exported

        valueName = "Backside"

        valueType = "int"

        value = // 0 (front) or 1 (back) to indicate whether the image is a backside image.
      parameters:
      - description: "This can be left without an assignment or you can use itself,\
          \ suppress_response_codes=suppress_response_codes"
        explode: true
        in: query
        name: suppress_response_codes
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            example:
              captureFlow: ""
              exportProfile: ""
              batchName: "Batch_{NextId}"
              batchRootLevel: 3
              env: D
              pdfGeneration: None
              exportType: AutoFormatLocal
              ftpConnection: ""
              autoFormatExcludeImages: false
              dispatch: S
              iAServerConnection: ""
              nodes:
              - nodeId: 1
                parentId: 0
              - nodeId: 2
                parentId: 1
              - nodeId: 3
                parentId: 2
              - nodeId: 4
                parentId: 2
              - nodeId: 5
                parentId: 2
              - nodeId: 6
                parentId: 2
              - nodeId: 7
                parentId: 1
              - nodeId: 8
                parentId: 7
              - nodeId: 9
                parentId: 7
              - nodeId: 10
                parentId: 7
              - nodeId: 11
                parentId: 0
              - nodeId: 12
                parentId: 11
              - nodeId: 13
                parentId: 12
              - nodeId: 14
                parentId: 12
              - nodeId: 15
                parentId: 12
              - nodeId: 16
                parentId: 12
              - nodeId: 17
                parentId: 11
              - nodeId: 18
                parentId: 17
              - nodeId: 19
                parentId: 17
              - nodeId: 20
                parentId: 17
              values:
              - nodeId: 1
                valueName: BooleanFalse
                value: false
                valueType: bool
                offset: 0
                fileExtension: null
              - nodeId: 1
                valueName: FloatValue
                value: 20002.2344
                valueType: float
                offset: 0
                fileExtension: null
              - nodeId: 1
                valueName: CurrentTime
                value: 2016-08-16T23:57:28.3956569Z
                valueType: datetime
                offset: 0
                fileExtension: null
              - nodeId: 1
                valueName: IntLevel
                value: 3
                valueType: int
                offset: 0
                fileExtension: null
              - nodeId: 1
                valueName: DirectoryName
                value: D:\Temp\BatchRoot\Doc
                valueType: string
                offset: 0
                fileExtension: null
              - nodeId: 2
                valueName: BooleanTrue
                value: true
                valueType: bool
                offset: 0
                fileExtension: null
              - nodeId: 2
                valueName: FloatValue
                value: 10002.2344
                valueType: float
                offset: 0
                fileExtension: null
              - nodeId: 2
                valueName: CurrentTime
                value: 2016-08-16T23:57:28.3956569Z
                valueType: datetime
                offset: 0
                fileExtension: null
              - nodeId: 2
                valueName: IntL54evel
                value: 2
                valueType: int
                offset: 0
                fileExtension: null
              - nodeId: 2
                valueName: DirectoryName
                value: D:\Temp\BatchRoot\Doc\Pages
                valueType: string
                offset: 0
                fileExtension: null
              - nodeId: 3
                valueName: FileName
                value: D:\Temp\BatchRoot\Doc\Pages\AfterAnnotations.tif
                valueType: string
                offset: 0
                fileExtension: null
              - nodeId: 3
                valueName: OutputImage
                value: F_83fe504ee8dd45a5ab726d76e55ebf0fDAT
                valueType: file
                offset: 0
                fileExtension: tif
              - nodeId: 4
                valueName: FileName
                value: D:\Temp\BatchRoot\Doc\Pages\AnnotationsEIndex.tif
                valueType: string
                offset: 0
                fileExtension: null
              - nodeId: 4
                valueName: OutputImage
                value: F_d486352f27b047e098388591cfb86d71DAT
                valueType: file
                offset: 0
                fileExtension: tif
              - nodeId: 5
                valueName: FileName
                value: D:\Temp\BatchRoot\Doc\Pages\JPEG_24BitColor_ProgressiveJpeg-0001.jpg
                valueType: string
                offset: 0
                fileExtension: null
              - nodeId: 5
                valueName: OutputImage
                value: F_63a204692bb34103966692a5cfe7e026DAT
                valueType: file
                offset: 0
                fileExtension: jpg
              - nodeId: 6
                valueName: FileName
                value: D:\Temp\BatchRoot\Doc\Pages\JPEG_24BitColor_Sequential Jpeg-0001.jpg
                valueType: string
                offset: 0
                fileExtension: null
              - nodeId: 6
                valueName: OutputImage
                value: F_ed397d5c08284795882e6e4eab7db97fDAT
                valueType: file
                offset: 0
                fileExtension: jpg
              - nodeId: 7
                valueName: BooleanFalse
                value: false
                valueType: bool
                offset: 0
                fileExtension: null
              - nodeId: 7
                valueName: FloatValue
                value: 10007.2344
                valueType: float
                offset: 0
                fileExtension: null
              - nodeId: 7
                valueName: CurrentTime
                value: 2016-08-16T23:57:28.6472619Z
                valueType: datetime
                offset: 0
                fileExtension: null
              - nodeId: 7
                valueName: IntLevel
                value: 2
                valueType: int
                offset: 0
                fileExtension: null
              - nodeId: 7
                valueName: DirectoryName
                value: D:\Temp\BatchRoot\Doc\pages2
                valueType: string
                offset: 0
                fileExtension: null
              - nodeId: 8
                valueName: FileName
                value: D:\Temp\BatchRoot\Doc\pages2\NVC_JPEG_8Bit_Gray_Sequential
                  Jpeg-0001.jpg
                valueType: string
                offset: 0
                fileExtension: null
              - nodeId: 8
                valueName: OutputImage
                value: F_2cc8878d863c41c1b84b9b0fcb73c45fDAT
                valueType: file
                offset: 0
                fileExtension: jpg
              - nodeId: 9
                valueName: FileName
                value: D:\Temp\BatchRoot\Doc\pages2\PNG_8bit_2color_transparent.png
                valueType: string
                offset: 0
                fileExtension: null
              - nodeId: 9
                valueName: OutputImage
                value: F_944faeac690a462f920d3c4055815e4bDAT
                valueType: file
                offset: 0
                fileExtension: png
              - nodeId: 10
                valueName: FileName
                value: D:\Temp\BatchRoot\Doc\pages2\TestUimBestBerryCompany.png
                valueType: string
                offset: 0
                fileExtension: null
              - nodeId: 10
                valueName: OutputImage
                value: F_4cd72779dcf64257bb247542be90dbc9DAT
                valueType: file
                offset: 0
                fileExtension: png
              - nodeId: 11
                valueName: BooleanFalse
                value: false
                valueType: bool
                offset: 0
                fileExtension: null
              - nodeId: 11
                valueName: FloatValue
                value: 20022.2344
                valueType: float
                offset: 0
                fileExtension: null
              - nodeId: 11
                valueName: CurrentTime
                value: 2016-08-16T23:57:28.7252634Z
                valueType: datetime
                offset: 0
                fileExtension: null
              - nodeId: 11
                valueName: IntLevel
                value: 3
                valueType: int
                offset: 0
                fileExtension: null
              - nodeId: 11
                valueName: DirectoryName
                value: D:\Temp\BatchRoot\Doc 1
                valueType: string
                offset: 0
                fileExtension: null
              - nodeId: 12
                valueName: BooleanTrue
                value: true
                valueType: bool
                offset: 0
                fileExtension: null
              - nodeId: 12
                valueName: FloatValue
                value: 10012.2344
                valueType: float
                offset: 0
                fileExtension: null
              - nodeId: 12
                valueName: CurrentTime
                value: 2016-08-16T23:57:28.7252634Z
                valueType: datetime
                offset: 0
                fileExtension: null
              - nodeId: 12
                valueName: IntLevel
                value: 2
                valueType: int
                offset: 0
                fileExtension: null
              - nodeId: 12
                valueName: DirectoryName55
                value: D:\Temp\BatchRoot\Doc 1\Pages
                valueType: string
                offset: 0
                fileExtension: null
              - nodeId: 13
                valueName: FileName
                value: D:\Temp\BatchRoot\Doc 1\Pages\AfterAnnotations.tif
                valueType: string
                offset: 0
                fileExtension: null
              - nodeId: 13
                valueName: OutputImage
                value: F_5c1387eb0db649ba986eb79c0da24060DAT
                valueType: file
                offset: 0
                fileExtension: tif
              - nodeId: 14
                valueName: FileName
                value: D:\Temp\BatchRoot\Doc 1\Pages\AnnotationsEIndex.tif
                valueType: string
                offset: 0
                fileExtension: null
              - nodeId: 14
                valueName: OutputImage
                value: F_d48cd08875ba4634b83aa8c4b3679351DAT
                valueType: file
                offset: 0
                fileExtension: tif
              - nodeId: 15
                valueName: FileName
                value: D:\Temp\BatchRoot\Doc 1\Pages\JPEG_24BitColor_ProgressiveJpeg-0001.jpg
                valueType: string
                offset: 0
                fileExtension: null
              - nodeId: 15
                valueName: OutputImage
                value: F_967cf342b1034596bffce852785a8301DAT
                valueType: file
                offset: 0
                fileExtension: jpg
              - nodeId: 16
                valueName: FileName
                value: D:\Temp\BatchRoot\Doc 1\Pages\JPEG_24BitColor_Sequential Jpeg-0001.jpg
                valueType: string
                offset: 0
                fileExtension: null
              - nodeId: 16
                valueName: OutputImage
                value: F_11fc88e5e3c24f8fb740dec20273b730DAT
                valueType: file
                offset: 0
                fileExtension: jpg
              - nodeId: 17
                valueName: BooleanFalse
                value: false
                valueType: bool
                offset: 0
                fileExtension: null
              - nodeId: 17
                valueName: FloatValue
                value: 10017.2344
                valueType: float
                offset: 0
                fileExtension: null
              - nodeId: 17
                valueName: CurrentTime
                value: 2016-08-16T23:57:28.9436676Z
                valueType: datetime
                offset: 0
                fileExtension: null
              - nodeId: 17
                valueName: IntLevel
                value: 2
                valueType: int
                offset: 0
                fileExtension: null
              - nodeId: 17
                valueName: DirectoryName
                value: D:\Temp\BatchRoot\Doc 1\pages2
                valueType: string
                offset: 0
                fileExtension: null
              - nodeId: 18
                valueName: FileName
                value: D:\Temp\BatchRoot\Doc 1\pages2\NVC_JPEG_8Bit_Gray_Sequential
                  Jpeg-0001.jpg
                valueType: string
                offset: 0
                fileExtension: null
              - nodeId: 18
                valueName: OutputImage
                value: F_e81be699a67d4c4ebfb49408fc97c948DAT
                valueType: file
                offset: 0
                fileExtension: jpg
              - nodeId: 19
                valueName: FileName
                value: D:\Temp\BatchRoot\Doc 1\pages2\PNG_8bit_2color_transparent.png
                valueType: string
                offset: 0
                fileExtension: null
              - nodeId: 19
                valueName: OutputImage
                value: F_8fb7378bc6994095abdf7336a9dca3ddDAT
                valueType: file
                offset: 0
                fileExtension: png
              - nodeId: 20
                valueName: FileName
                value: D:\Temp\BatchRoot\Doc 1\pages2\TestUimBestBerryCompany.png
                valueType: string
                offset: 0
                fileExtension: null
              - nodeId: 20
                valueName: OutputImage
                value: F_338acd1e28ab4f98bc7df0b94fa9d6edDAT
                valueType: file
                offset: 0
                fileExtension: png
            schema:
              $ref: '#/components/schemas/_session_batches_post_request'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 201
                  code: OK0000
                  message: ""
                  server: WS-S9d85aaf9fd134654be88edc11906fd53IS
                id: "https://{host}/cp-rest/v2/session/batches/B3K5_2SU3K4_1_pBiPrO"
                title: Batch_3K5_11
                updated: 2016-08-24T22:16:07.5331714Z
                _links:
                  self:
                    href: "https://{host}/cp-rest/v2/session/batches/B3K5_2SU3K4_1_pBiPrO"
                content:
                  id: B3K5_2SU3K4_1_pBiPrO
                  batchName: Batch_3K5_11
                  status: S
                  serverBatchId: ""
                  captureFlow: ""
                  batchRootLevel: 3
                  batchPriority: 50
                  lastUpdate: 2016-08-24T22:16:07.5331714Z
                  lastError: ""
                  localExportFileId: "https://{host}/cp-rest/v2/session/files/Batch_3K5_11.zip"
              schema:
                $ref: '#/components/schemas/_session_batches_post_201_response'
          description: Created
        "401":
          description: Unauthorized
        "403":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 403
                  code: ER8013
                  message: "[M8013] The user does not have sufficient permissions\
                    \ for the operation."
                  server: WS-S5fcb9d7368af42f0af244010e3ad5907HS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Forbidden
        "415":
          content:
            application/json:
              example:
                returnStatus:
                  status: 415
                  code: ER8016
                  message: "[M8016] The Accept type is not supported for this request."
                  server: WS-Sb29a7dd631e94af5a5439148ea7a5bffHS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Unsupported Media Type
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error
      security:
      - na-1-dev.api.opentext.com: []
      summary: Creates and exports a batch.
      tags:
      - Batch
      x-content-type: application/json
      x-accepts: application/json
  /session/services:
    get:
      description: This operation returns a feed listing all of the Real-Time Services.
      parameters:
      - description: "This can be left without an assignment or you can use itself,\
          \ suppress_response_codes=suppress_response_codes"
        explode: true
        in: query
        name: suppress_response_codes
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 200
                  code: OK0000
                  message: ""
                  server: WS-Sb29a7dd631e94af5a5439148ea7a5bffHS
                id: "https://{host}/cp-rest/v2/session/services"
                title: Services
                updated: 2017-01-11T00:03:48.8679075Z
                _links:
                  self:
                    href: "https://{host}/cp-rest/v2/session/services"
                _embedded:
                  collection:
                  - id: "https://{host}/cp-rest/v2/session/services/processimage"
                    title: Process Image Services
                    updated: 2017-01-11T00:03:48.8679075Z
                    _links:
                      self:
                        href: "https://{host}/cp-rest/v2/session/services/processimage"
                    content:
                      name: ProcessImage
                      version: 1.0.0.0
              schema:
                $ref: '#/components/schemas/_session_services_get_200_response'
          description: OK
        "401":
          description: Unauthorized
        "415":
          content:
            application/json:
              example:
                returnStatus:
                  status: 415
                  code: ER8016
                  message: "[M8016] The Accept type is not supported for this request."
                  server: WS-Sb29a7dd631e94af5a5439148ea7a5bffHS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Unsupported Media Type
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error
      security:
      - na-1-dev.api.opentext.com: []
      summary: Retrieves a list of the Real-Time Services that are available.
      tags:
      - Real-Time Services
      x-accepts: application/json
  /session/services/convertimages:
    post:
      description: |-
        The Convert Images Real-Time Service provides image conversion capability as defined by an image conversion profile.

        Capture Services currently only supports using system provided image conversion profiles named:

        - SplitPDFProfile,
        - SplitPDFtoPDFs,
        - ConvertToJPEG and
        - CombineSearchablePDFs. "SplitPDFProfile" profile supports splitting PDF documents including colored documents resulting into tiff images of 300 DPI resolution. "SplitPDFtoPDFs" profile supports splitting multipage PDF document into single page PDF documents. "ConvertToJPEG" profile supports converting and splitting any type of document including colored document into multiple single page JPEG images. “CombineSearchablePDFs” profile supports merging multipage PDF documents into a single mutltipage PDF document. "SplitPDFtoPDFsCompress" and "CombineSearchablePDFsCompress" provide same functionality as "SplitPDFtoPDFs" and "CombineSearchablePDFs" respectively but with optimized (Compressed) output PDFs.

        **Service Properties**

        - **Env** - Metadata environment identifier. Value must be "S" since these profiles are system provided profile.

        - **Profile** - Required String. The Image conversion profile name to use for the conversion. Currently only system provided profiles name are “SplitPDFProfile”, “SplitPDFtoPDFs”, “CombineSearchablePDFs”, "SplitPDFtoPDFsCompress" and “CombineSearchablePDFsCompress”.

        - **ReturnFileDataInline** - Boolean. If true, then the resulting file is returned inline in the result item as a base64 encoded file. If omitted or false, then the resulting file is returned as a fileId and can be retrieved through the Files resource. File ID referncing the resulting file is returned as part of URI in "src" property of File object of Result Item.

        **Number of Request Items**

        This Real-Time Service supports one or more items.

        **Values Per Request Item**

        No values are necessary or used.

        **Files Per Request Item**

        Each item can have one or more files. It can either be an embedded file or a reference to a file ID previously posted to the Files Resource.

        This service supports JPEG, PNG, TIFF, and PDF files. The File Type property for the file must specify the file extension for the file, such as "tif", "png", "jpg", "pdf". This is used by the Convert Images Real-Time Service for further typing of the file.
      requestBody:
        content:
          application/hal+json:
            example:
              serviceProps:
              - name: Env
                value: S
              - name: Profile
                value: SplitPDFProfile
              - name: ReturnFileDataInline
                value: false
              requestItems:
              - nodeId: 1
                values: null
                files:
                - name: 9PageSequencedPdf-G4
                  value: F_d327d432cdaf4ed5895cf72ee7b229bbPDF
                  contentType: application/pdf
                  fileType: pdf
            schema:
              $ref: '#/components/schemas/servicesRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 200
                  code: OK0000
                  message: ""
                  server: WS-S82d58e52200c4b85a2756dc5816ec639IS
                licenseUsedPercent: 0
                id: ReqIMGCONV_378_0021007
                serviceName: convertimages
                executionMilliSeconds: 7731
                licensePagesUsed: 0
                licensePagesUsed2: 0
                resultItems:
                - nodeId: 1
                  errorCode: ""
                  errorMessage: ""
                  values: []
                  files:
                  - name: 9PageSequencedPdf-G4
                    value: F_7dd9c7d28f134ddb82036b7bc444513fTIF
                    contentType: image/tiff
                    src: "https://{host}/cp-rest/v2/session/files/F_7dd9c7d28f134ddb82036b7bc444513fTIF"
                    fileType: tif
                  - name: 9PageSequencedPdf-G41
                    value: F_1d4d4a313a1546fb9235831431924008TIF
                    contentType: image/tiff
                    src: "https://{host}/cp-rest/v2/session/files/F_1d4d4a313a1546fb9235831431924008TIF"
                    fileType: tif
                  - name: 9PageSequencedPdf-G42
                    value: F_183640cd3e664c75a4fcaff3a357e725TIF
                    contentType: image/tiff
                    src: "https://{host}/cp-rest/v2/session/files/F_183640cd3e664c75a4fcaff3a357e725TIF"
                    fileType: tif
                  - name: 9PageSequencedPdf-G43
                    value: F_e8bdfa99296244bfab13f8a504ac915bTIF
                    contentType: image/tiff
                    src: "https://{host}/cp-rest/v2/session/files/F_e8bdfa99296244bfab13f8a504ac915bTIF"
                    fileType: tif
                  - name: 9PageSequencedPdf-G44
                    value: F_684447f71bfd4f43adcaa6aeec1dd793TIF
                    contentType: image/tiff
                    src: "https://{host}/cp-rest/v2/session/files/F_684447f71bfd4f43adcaa6aeec1dd793TIF"
                    fileType: tif
                  - name: 9PageSequencedPdf-G45
                    value: F_e2f6290908c2427a84a2d9fa0b43c539TIF
                    contentType: image/tiff
                    src: "https://{host}/cp-rest/v2/session/files/F_e2f6290908c2427a84a2d9fa0b43c539TIF"
                    fileType: tif
                  - name: 9PageSequencedPdf-G46
                    value: F_74660038bd374328b87c62b59f5fc041TIF
                    contentType: image/tiff
                    src: "https://{host}/cp-rest/v2/session/files/F_74660038bd374328b87c62b59f5fc041TIF"
                    fileType: tif
                  - name: 9PageSequencedPdf-G47
                    value: F_c0cf5674ac4648bc99073e7c9cb80219TIF
                    contentType: image/tiff
                    src: "https://{host}/cp-rest/v2/session/files/F_c0cf5674ac4648bc99073e7c9cb80219TIF"
                    fileType: tif
                  - name: 9PageSequencedPdf-G48
                    value: F_1d2049ff41024cbea2e8499fc323a19aTIF
                    contentType: image/tiff
                    src: "https://{host}/cp-rest/v2/session/files/F_1d2049ff41024cbea2e8499fc323a19aTIF"
                    fileType: tif
              schema:
                $ref: '#/components/schemas/_session_services_convertimages_post_200_response'
          description: |-
            The result item objects will be put in the same order as the request items that were submitted.

            **Values Per Result Item**

            No values are returned in the result item objects.

            **Files Per Result Item**

            There will be one or more files returned based on what was submitted.
        "401":
          description: Unauthorized
        "403":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 403
                  code: ER8013
                  message: "[M8013] The user does not have sufficient permissions\
                    \ for the operation."
                  server: WS-S5fcb9d7368af42f0af244010e3ad5907HS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Forbidden
        "415":
          content:
            application/json:
              example:
                returnStatus:
                  status: 415
                  code: ER8016
                  message: "[M8016] The Accept type is not supported for this request."
                  server: WS-Sb29a7dd631e94af5a5439148ea7a5bffHS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Unsupported Media Type
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error
      security:
      - na-1-dev.api.opentext.com: []
      summary: Convert Images Service.
      tags:
      - Real-Time Services
      x-content-type: application/hal+json
      x-accepts: application/json
  /session/services/processimage:
    post:
      description: |-
        The Process Image Real-Time Service provides image processing capability as defined by an image processor profile defined in the Designer.

        **Service Properties**

        - **Env** - Metadata environment identifier. Value is one of "D", "T" or "P". Default value is "P".

        - **Profile** - Required String. The Image processor profile name to use.

        - **ReturnFileDataInline** - Boolean. If true, then the resulting file is returned inline in the result item as a base64 encoded file. If omitted or false, then the resulting file is returned as a fileId and can be retrieved through the Files resource. File ID referncing the resulting file is returned as part of URI in "src" property of File object of Result Item.

        - **Redact** - Boolean. Image will be redacted using “Rectangles” property passed in Request Item. Redaction will be done before profile filter processing if profile name is passed in. “Profile” property is optional when “Redact” property is “True”.

        **Number of Request Items**

        This Real-Time Service supports one or more items.

        **Values Per Request Item**

        - **Rectangles** - **Optional** Object. Array of rectangles marking areas on image to be redacted. This parameter is used only when service property “Redact” is set to true.
        Rectangle identified by values in the order of Left, Top, Width, and Height. All values are Pixels with a resolution of 96 dpi in both X and Y direction.
        {
          "left":<integer>,
          "top":<integer>,
          "width":<integer>,
          "height":<integer>
        }

        **Files Per Request Item**

        This service supports JPEG, PNG, and TIFF files. There can only be one file per request item object. It can either be an embedded file or a reference to a file ID previously posted to the Files Resource. The File Type property for the file is ignored for this service.
      requestBody:
        content:
          application/hal+json:
            example:
              serviceProps:
              - name: Env
                value: D
              - name: Profile
                value: DistractionRemoval
              - name: ReturnFileDataInline
                value: false
              requestItems:
              - nodeId: 1
                values: null
                files:
                - name: Wren
                  value: F_e644f6eff3ba445aaa3d8f47697764edTIF
                  contentType: image/tiff
                  fileType: tif
            schema:
              $ref: '#/components/schemas/servicesRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 200
                  code: OK0000
                  message: ""
                  server: WS-S9d85aaf9fd134654be88edc11906fd53IS
                licenseUsedPercent: 0
                id: ReqCPIMGPRO_3K3_0021009
                serviceName: processimage
                executionMilliSeconds: 2185
                licensePagesUsed: 0
                licensePagesUsed2: 0
                resultItems:
                - nodeId: 1
                  errorCode: ""
                  errorMessage: ""
                  values:
                  - name: BlackBarLeft
                    value: 0
                  - name: BlackBarTop
                    value: 0
                  - name: BlackBarRight
                    value: 0
                  - name: BlackBarBottom
                    value: 0
                  files:
                  - name: Wren
                    value: F_901c0855f89242b3bb363c8f3d2946b8TIF
                    contentType: image/tiff
                    src: "https://{host}/cp-rest/v2/session/files/F_901c0855f89242b3bb363c8f3d2946b8TIF"
                    fileType: tif
              schema:
                $ref: '#/components/schemas/_session_services_convertimages_post_200_response'
          description: |-
            The result item objects will be put in the same order as the request items that were submitted.

            **Values Per Result Item**

            The values returned depend on the filters defined in the Image processor profile in the Designer. Each filter may return one or more values. Please see the Image Processor Guide help documentation for learning what return IA Values are specified for a particular filter.

            **Files Per Result Item**

            There will be one or more files returned based on what was submitted.
        "401":
          description: Unauthorized
        "403":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 403
                  code: ER8013
                  message: "[M8013] The user does not have sufficient permissions\
                    \ for the operation."
                  server: WS-S5fcb9d7368af42f0af244010e3ad5907HS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Forbidden
        "415":
          content:
            application/json:
              example:
                returnStatus:
                  status: 415
                  code: ER8016
                  message: "[M8016] The Accept type is not supported for this request."
                  server: WS-Sb29a7dd631e94af5a5439148ea7a5bffHS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Unsupported Media Type
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error
      security:
      - na-1-dev.api.opentext.com: []
      summary: Process Image Service.
      tags:
      - Real-Time Services
      x-content-type: application/hal+json
      x-accepts: application/json
  /session/services/fullpageocr:
    post:
      description: |-
        The Full Page OCR Real-Time Service will provide full page OCR processing on submitted images or PDF documents and return the OCR content in the specified output type.

        **Service Properties**

        - **Env** - Metadata environment identifier. Value is one of "D", "T" or "P". Default value is "P".

        - **OcrEngineName** - String. This specifies the OCR engine name to use. Currently supported engine is “Advanced”. "Advanced” OCR engine is currently assigned to the “OpenText Capture Recognition Engine” for this release. The default OCR engine is “Advanced”.

        - **AutoRotate** - Boolean. This is an optional value specifying whether auto rotation should be enabled for the engine. The default is true.

        - **Country** - String. This optional value specifies the country for the engine. The default is "USA". When passing mutiple values in comma separated list, values must be within countries/languages groups given below:
          - **Greek**: Greece, Greek
          - **Latin and Cyrillic languages**: Afrikaans, Albanian, Andorra, Argentina, Australia, Austria, AzerbaijaniCyrillic, AzerbaijaniLatin, AzerbaijanCyrillic, AzerbaijanLatin, Baltic, Basque, Belarus, Belarusian, Belgium, BosnianLatin, BosniaLatin, Brazil, Bulgaria, Bulgarian, Canada, Catalan, CentralAmerica, CentralEurope, Chile, Colombia, Croatia, Croatian, Cyrillic, Czech, CzechLanguage, Danish, Denmark, Dutch, English, Estonia, Estonian, Faroese, Finland, Finnish, France, French, Frisian, German, Germany, GreatBritain, Greece, Greek, Guarani, Hani, Hungarian, Hungary, Iceland, Icelandic, Indonesian, Ireland, Irish, Italian, Italy, JapanLatin, KazakhCyrillic, KazakhLatin, KirghizCyrillic, Kirundi, Latin, Latvia, Latvian, Liechtenstein, Lithuania, Lithuanian, Luxembourg, Luxembourgish, Macedonian, Malay, Mexico, Netherlands, NewZealand, Norway, Norwegian, Poland, Polish, Portugal, Portuguese, Quechua, RhaetoRomanic, Romania, Romanian, Russia, Russian, Rwanda, Scandinavia, SerbianCyrillic, SerbianLatin, SerbiaCyrillic, SerbiaLatin, Shona, Slovak, Slovakia, Slovenia, Slovenian, Somali, Sorbian, SouthAfrica, SouthAmerica, SouthAmericaSpanish, Spain, Spanish, Swahili, Sweden, Swedish, Switzerland, TajikCyrillic, Turkey, Turkish, TurkmenCyrillic, TurkmenLatin, Ukraine, Ukrainian, USA, UzbekCyrillic, UzbekLatin, Venezuela, WesternEurope, Wolof, Xhosa, Zulu
          - **Chinese**: ChineseSimplified, ChineseTraditional
          - **Chinese Hong Kong**: ChineseTraditionalHongKong
          - **Japanese**: Japan, Japanese (cannot both be selected.)
          - **Korean**: Korean
          - **Thai**: Thai, Thailand (English can be added explicitly)
        - **ProcessingMode** - String. This optional value specifies proessing mode value for the engine. The default is "VoteOcrAndEText". This can be one of the following values:
          - **VoteOcrAndEText** - Select this option if your input documents contain mixed content. The data from file is extracted by running the full page OCR reading. Where possible, electronic text is also extracted and the results are used to refine the OCR results.
          - **OcrFromImage** - Select this option if your input documents are images / contain images only. The data from file is extracted by running the full page OCR reading
          - **ExtractFromEText** - Select this option if your input files are PDF files that contain textual data only. Electronic text is extracted natively, as is

        **Number of Request Items**

        This Real-Time Service supports one or more items.

        **Values Per Request Item**

        - **OutputType** - **Required** String. This setting specifies the OCR output type for the request item. It can be one of these values "Pdf", "Text". The additional values you can make on the request item are based on what is assigned to the OutputType.

          - **Values for OutputType "Pdf"**

            - **Version** - String. Can be one of these optional values "Pdf", "Pdf14", "Pdf15", "Pdf16", "Pdf17", "PdfA1A", "PdfA1B", "PdfA2A", "PdfA2B", "PdfA2U". If not provided, the default value is "Pdf". Mapping to Acrobat version:"Pdf" -> PDF 1.7, "Pdf14" -> PDF 1.4, "Pdf15" -> PDF 1.5, "Pdf16" -> PDF 1.6, "Pdf17" -> PDF 1.7, "PdfA1A" -> PDF/A-1a, "PdfA1B" -> PDF/A-1b, "PdfA2A" -> PDF/A-2a and "PdfA2B" - > PDF/A-2b, "PdfA2U" -> PDF/A-2u
            - **Compression** - String. Sets the compression level to apply to the text in the output PDF file.
            Can be one of these optional values “None”, “Low, “Medium”, “High”. If not provided, the default value is “Medium”.

            - **ImageSelection** - String. Can be one of these optional values. If not provided, the default value is “OriginalImage”.
              - **NoImage** - Only extracted text will be included into the output file.
              - **OriginalImage** - Extracted text will be included and the source image will be set as a background for the page in the output file.
              - **ResultImage** - Extracted text will be included and the processed image will be set as a background for the page in the output file.
            - **ImageResolutionLimit** - Number. Limits resolution of images (color, grey, binary) to provided value in DPI. If image resolution is lower than specified by this parameter, then image remains unchanged, otherwise it is scaled to this specified value.
            Valid values are from 0 to 300. Default value is 150. When value is out of range (value outside 0 to 300), default is used.
            - **JpegCompressionLevel** - Number. Controls the compression rate of the JPEG. Higher compression rates produce smaller files with lower image quality. The current version supports compression rates from 10, 15, 20, 25 an so on in increments of 5 until 90. Values other than 10, 15, 20, 25 etc in the range 10 to 90 are rounded to nearest valid value. E.g. 13 is rounded to 15.
            The default value is 80. Default value is used when this parameter value is out of 10 to 90 range.
            - **BinaryImage** - Boolean. Specifies whether to convert pdf file images to the binary format. When value is ‘true’ then pdf images are converted to the binary format. The default value is ‘false’.

          - **Values for OutputType "Text"**

            - None for output type “Text”. Encoding is “Unicode”.

        **Files Per Request Item**

        This service supports JPEG, PNG, TIFF, and PDF files. Each item can have one or more files. It can either be an embedded file or a reference to a file ID previously posted to the Files Resource. The supported file input types for color and grayscale images are JPEG and PNG. The supported file input type for binary images is TIFF G4.
      requestBody:
        content:
          application/hal+json:
            example:
              serviceProps:
              - name: Env
                value: D
              - name: OcrEngineName
                value: Advanced
              requestItems:
              - nodeId: 1
                values:
                - name: OutputType
                  value: text
                files:
                - name: DoodadPage1
                  value: F_5fca44b57c4b4cddae84a7be36864c4bTIF
                  contentType: image/tiff
            schema:
              $ref: '#/components/schemas/servicesRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 200
                  code: OK0000
                  message: ""
                  server: WS-S7699312da37548f4a2bf9921c4a66d90
                id: REQ1
                serviceName: FullPageOCR
                executionMilliSeconds: 847
                licenseUsedPercent: 0
                resultItems:
                - nodeId: 1
                  errorCode: ""
                  errorMessage: ""
                  files:
                  - name: Doodad-p1
                    value: F_de487b9914be497681d09a927b060c27DAT
                    contentType: text/plain
                    src: "https://{host}/cp-rest/session/files/F_de487b9914be497681d09a927b060c27DAT"
                    fileType: txt
              schema:
                $ref: '#/components/schemas/_session_services_fullpageocr_post_200_response'
          description: |-
            The result item objects will be put in the same order as the request items that were submitted.

            **Values Per Result Item**

            No values are returned in the result item objects.

            **Files Per Result Item**

            There will be one file returned per request item based on the OutputType specified in the request item.
        "401":
          description: Unauthorized
        "403":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 403
                  code: ER8013
                  message: "[M8013] The user does not have sufficient permissions\
                    \ for the operation."
                  server: WS-S5fcb9d7368af42f0af244010e3ad5907HS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Forbidden
        "415":
          content:
            application/json:
              example:
                returnStatus:
                  status: 415
                  code: ER8016
                  message: "[M8016] The Accept type is not supported for this request."
                  server: WS-Sb29a7dd631e94af5a5439148ea7a5bffHS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Unsupported Media Type
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error
      security:
      - na-1-dev.api.opentext.com: []
      summary: Full Page OCR Service.
      tags:
      - Real-Time Services
      x-content-type: application/hal+json
      x-accepts: application/json
  /session/services/readbarcodes:
    post:
      description: |-
        The Read BarCodes Real-Time Service will provide barcode extraction processing.

        **Service Properties**

        - **Env** - Metadata environment identifier. Value is one of "D", "T" or "P". Default value is "P".

        - **BarcodeTypes** - Required String. Comma separated list of available barcodes. List of barcodes types:
          - Addon2, Addon5, AustralianPost, BCDMATRIX, Codabar, Code25_Datalogic, Code25_IATA, Code25_Industrial, Code25_Interleaved, Code25_Invert, Code25_Matrix, Code32, Code39, Code93, DataMatrix, EAN13, EAN8,IntelligentMail, PDF417, Postnet, QRCode, RoyalPost, Type128, UCC128, UPC_A, UPC_E

        - **Characters** - Number. Exact number of characters to search for in the barcode text. Valid values range from 0 to 100.

        - **Decode** - Boolean. If true, then it decodes the results into readable strings; otherwise, if false (the default), then it will not decode into readable strings.

        - **MinHeight** - Number. Minimum height of barcode. Valid values range from 0 (default) to 1000.

        - **Mode** - String. Barcode detection modes let you switch between normal and enhanced detection types. If omitted, defaults to **Normal**. Valid values:
          - **Enhanced** - Provides better results by performing additional image preprocessing, but takes longer to complete,
          - **Normal** - Enables quick barcodes detection.

        - **Orientation** - String. Specifies the orientation of the barcodes detection. If omitted, then it **defaults** to **HorizontalVertical**. Valid values are:
          - Horizontal,
          - HorizontalVertical,
          - HorizontalVerticalDiagonal,
          - Vertical.

        - **ScanDistance** - Number. Specifies the scan distance (in pixels) between line sweeps. Useful when searching for 1D type barcodes. Reducing the value improves detection of barcodes which are short relative to their height. Valid values are 1 to 10. If omitted, **defaults to 5**.

        - **UseChecksum** - Boolean. A value that is an indication of whether the checksums are used. If omitted, then it **defaults to false**.

        - **UseRegion** - String. A region to select for barcode detection in order to improve the barcode detection process. It **defaults to empty (not used)**.

        **Number of Request Items**

        This Real-Time Service supports one or more items.

        **Values Per Request Item**

        No values are necessary or used.

        **Files Per Request Item**

        This service supports JPEG, PNG, and TIFF files. There can only be one file per request item object. It can either be an embedded file or a reference to a file ID previously posted to the Files Resource. The File Type property for the file is ignored for this service.
      requestBody:
        content:
          application/hal+json:
            example:
              serviceProps:
              - name: Env
                value: D
              - name: Mode
                value: Normal
              - name: Orientation
                value: Horizontal
              - name: Decode
                value: true
              - name: Characters
                value: "8"
              - name: MinHeight
                value: "0"
              - name: ScanDistance
                value: "5"
              - name: BarcodeTypes
                value: ""
              - name: UseChecksum
                value: false
              - name: UseRegion
                value: ""
              requestItems:
              - nodeId: 1
                values: null
                files:
                - name: Barcodes
                  value: F_9b0772629acd46369a18571d630bfb29DAT
                  contentType: application/octet-stream
                  fileType: TIF
            schema:
              $ref: '#/components/schemas/servicesRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 200
                  code: OK0000
                  message: ""
                  server: WS-S9d85aaf9fd134654be88edc11906fd53IS
                licenseUsedPercent: 0
                id: ReqCPIMGPRO_3K3_0021033
                serviceName: readbarcodes
                executionMilliSeconds: 229
                licensePagesUsed: 0
                licensePagesUsed2: 0
                resultItems:
                - nodeId: 1
                  errorCode: ""
                  errorMessage: ""
                  values:
                  - name: Barcode0_Type
                    value: Codabar
                  - name: Barcode0_Text
                    value: "12345678"
                  - name: Barcode0_X
                    value: 880
                  - name: Barcode0_Y
                    value: 340
                  - name: Barcode0_Width
                    value: 358
                  - name: Barcode0_Height
                    value: 134
                  - name: Barcode0_Orientation
                    value: "0"
                  - name: Barcode0_Conf
                    value: 100
                  - name: Barcode1_Type
                    value: Code39
                  - name: Barcode1_Text
                    value: "39393939"
                  - name: Barcode1_X
                    value: 877
                  - name: Barcode1_Y
                    value: 1499
                  - name: Barcode1_Width
                    value: 462
                  - name: Barcode1_Height
                    value: 120
                  - name: Barcode1_Orientation
                    value: "0"
                  - name: Barcode1_Conf
                    value: 95
                  - name: Barcodes_Count
                    value: 3
                  files: []
              schema:
                $ref: '#/components/schemas/_session_services_convertimages_post_200_response'
          description: |-
            The result item objects will be put in the same order as the request items that were submitted.

            - **Values Per Result Item**

              Each result item object may have zero or more properties depending on the success of the Read BarCodes Real-Time Service to provide barcode information. The following possible values for each result item object may be returned:

              - **Barcode{0}_Conf** - Number. The barcode value’s confidence as a percentage number. Valid confidence values are 0 to 100. {0} is the index for the detected barcodes. The index values run from 0 to 9 in order of detection.)

              - **Barcode{0}_Height** - Number. The barcode's height in pixels. {0} is the index for the detected barcodes. The index values run from 0 to 9 in order of detection.

              - **Barcode{0}_Text** - Number. The barcode's text value. {0} is the index for the detected barcodes. The index values run from 0 to 9 in order of detection.

              - **Barcode{0}_Type** - String. The barcode's type name. {0} is the index for the detected barcodes. The index values run from 0 to 9 in order of detection.

              - **Barcode{0}_Width** - Number. The barcode's width in pixels. {0} is the index for the detected barcodes. The index values run from 0 to 9 in order of detection.

              - **Barcode{0}_X** - Number. The barcode’s X coordinate in pixels. {0} is the index for the detected barcodes. The index values run from 0 to 9 in order of detection.

              - **Barcode{0}_Y** - The barcode’s Y coordinate in pixels. {0} is the index for the detected barcodes. The index values run from 0 to 9 in order of detection.

              - **Barcodes_Count** - Number. The number of barcodes detected.

            - **Files Per Result Item**

              No files are returned by this Real-Time Service.
        "401":
          description: Unauthorized
        "403":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 403
                  code: ER8013
                  message: "[M8013] The user does not have sufficient permissions\
                    \ for the operation."
                  server: WS-S5fcb9d7368af42f0af244010e3ad5907HS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Forbidden
        "415":
          content:
            application/json:
              example:
                returnStatus:
                  status: 415
                  code: ER8016
                  message: "[M8016] The Accept type is not supported for this request."
                  server: WS-Sb29a7dd631e94af5a5439148ea7a5bffHS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Unsupported Media Type
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error
      security:
      - na-1-dev.api.opentext.com: []
      summary: Read BarCodes Service
      tags:
      - Real-Time Services
      x-content-type: application/hal+json
      x-accepts: application/json
  /session/services/classify:
    post:
      description: |-
        The Classify Service will perform Classification on the images submitted and return available Document Type and Template information if successful. In addition to template information, fields extracted as part of pre-index extraction will be retuned as fields in UimData.

        **Service Properties**

        - **Env** - Metadata environment identifier. Value is one of "D", "T" or "P". Default value is "P".

        - **Project** - Optional string. The recognition project to use to classify the document. Valid values are "Default" for the Advanced Recognition and "InformationExtraction" for the Information Extraction. If omitted, "Default" is used.

        **Number of Request Items**

        This Real-Time Service supports one or more items.

        **Values Per Request Item**

        - **OcrLocale** - Optional string. The locale that is used for reading text from the image when the request uses the "InformationExtraction" project. If omitted, text is read using the project's classification locale.

        **Files Per Request Item**

        This service supports JPEG, PNG, and TIFF files. There can only be one file per request item object. It can either be an embedded file or a reference to a file ID previously posted to the Files Resource. The File Type property for the file is ignored for this service.
      requestBody:
        content:
          application/hal+json:
            example:
              serviceProps:
              - name: Env
                value: D
              - name: Project
                value: InformationExtraction
              requestItems:
              - nodeId: 1
                values: null
                files:
                - name: Wren
                  value: F_30fd48db3ba14157ade16ba6b7f8c8a9TIF
                  contentType: image/tiff
                  fileType: tif
            schema:
              $ref: '#/components/schemas/servicesRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 200
                  code: OK0000
                  message: ""
                  server: WS-Sbf77b6cf64a140c5ad4db11b8cdba56aIS
                licenseUsedPercent: 0
                id: ReqCPEXTRAC_33B_0041250
                serviceName: classify
                executionMilliSeconds: 128
                licensePagesUsed: 1
                licensePagesUsed2: 0
                resultItems:
                - nodeId: 1
                  errorCode: ""
                  errorMessage: ""
                  values:
                  - name: DocumentTypeName
                    value: TestWren
                  - name: TemplateId
                    value: "28"
                  - name: DocBoundary
                    value: 0
                  - name: PaperOrientation
                    value: 0
                  - name: ClassificationId
                    value: d907a548196c4e35837dad51954cd3ed
                  - name: UimData
                    value:
                      docType: ""
                      locale: en-US
                      flaggedReason: null
                      extractionId: 3aff08999e844ff6a31aff002b0fcb4a
                      packageName: null
                      nodeList:
                      - name: InvoiceNumber
                        isArray: false
                        indexFieldType: string
                        labelText: InvoiceNumber
                        isRequired: false
                        controlType: TextBlock
                        data:
                        - arrayIndex: 0
                          value: "227628"
                          fieldError: null
                          mustConfirm: false
                          choices: null
                          locationRect:
                            left: 639
                            top: 144
                            width: 124
                            height: 30
                          pageId: 1
                          confidence: 100
                          flaggedReason: ""
                          extractedCharacters: null
                      - name: ShipVia
                        isArray: false
                        indexFieldType: string
                        labelText: ShipVia
                        isRequired: false
                        controlType: TextBlock
                        data:
                        - arrayIndex: 0
                          value: FOB SHANGHAI
                          fieldError: null
                          mustConfirm: false
                          choices: null
                          locationRect:
                            left: 24
                            top: 379
                            width: 125
                            height: 17
                          pageId: 1
                          confidence: 97
                          flaggedReason: ""
                          extractedCharacters: null
                  files: []
              schema:
                $ref: '#/components/schemas/_session_services_convertimages_post_200_response'
          description: |-
            The result item objects will be put in the same order as the request items that were submitted. This can be correlated using the nodeId property if needed.

            - **Values Per Result Item**

              - **DocumentTypeName** - String. This is the Document Type name. e.g. "Form1040EZ". Empty if no match was found.

              - **TemplateId** - String. This is the image template ID provided by the Classify Real-Time Service. This will be "-1" if no match was found.

              - **DocBoundary** - Number. Indicates whether this page defines a document boundary. Valid values are the following integers - 0 - means no document boundary. 1 - means natural separator. 2 - means artificial separator.

              - **PaperOrientation** - Number. Indicates where image is rotated by classify service. Valid values are as followings - 0 means no rotation. 1 means 90 degrees rotation. 2 means 180 degrees rotation. 3 means 270 degrees rotation.

              - **ClassificationId** - String. A server-generated ID that is used when learning to classify documents with the "InformationExtraction" project.

              - **UimData** - Object. This is a UIM data information object. Returned if pre-index field extraction was performed.

            - **Files Per Result Item**

              Image only if input image was rotated in classification. File data is returned inline if “ReturnFileDataInline” request parameter is true, else file is returned by file reference id.
        "401":
          description: Unauthorized
        "403":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 403
                  code: ER8013
                  message: "[M8013] The user does not have sufficient permissions\
                    \ for the operation."
                  server: WS-S5fcb9d7368af42f0af244010e3ad5907HS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Forbidden
        "415":
          content:
            application/json:
              example:
                returnStatus:
                  status: 415
                  code: ER8016
                  message: "[M8016] The Accept type is not supported for this request."
                  server: WS-Sb29a7dd631e94af5a5439148ea7a5bffHS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Unsupported Media Type
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error
      security:
      - na-1-dev.api.opentext.com: []
      summary: Classify Service.
      tags:
      - Real-Time Services
      x-content-type: application/hal+json
      x-accepts: application/json
  /session/services/classifyextractpage:
    post:
      description: |-
        The Classify Extract Page Service will perform classification and extraction on each item submitted and return a UIM object containing information from the result of classification and extraction.

        **Service Properties**

        - **Env** - Metadata environment identifier. Value is one of "D", "T" or "P". Default value is "P".

        - **IncludeOcrData** - Boolean. If true then the returned UIM data object will contain extracted characters information. Otherwise by default, it won't.

        - **Project** - Optional string. The recognition project to use to classify the document. Valid values are "Default" for the Advanced Recognition and "InformationExtraction" for the Information Extraction. If omitted, "Default" is used.

        **Number of Request Items**

        This Real-Time Service supports one or more items.

        **Values Per Request Item**

        - **OcrLocale** - Optional string. The locale that is used for reading text from the image when the request uses the "InformationExtraction" project. If omitted, text is read using the project's classification locale.

        **Files Per Request Item**

        This service supports JPEG, PNG, and TIFF files. There can only be one file per request item object. It can either be an embedded file or a reference to a file ID previously posted to the Files Resource. The File Type property for the file is ignored for this service.
      requestBody:
        content:
          application/hal+json:
            example:
              serviceProps:
              - name: Env
                value: D
              - name: IncludeOcrData
                value: false
              - name: Project
                value: InformationExtraction
              requestItems:
              - nodeId: 1
                values: null
                files:
                - name: Wren
                  value: F_28741fcd8ea9468fa23bee502f4b19ebTIF
                  contentType: image/tiff
                  fileType: tif
            schema:
              $ref: '#/components/schemas/servicesRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 200
                  code: OK0000
                  message: ""
                  server: WS-Sa3586a2353bb48c0b7131c9875f61e69IS
                licenseUsedPercent: 0
                id: REQ5
                serviceName: classifyextractpage
                executionMilliSeconds: 656
                licensePagesUsed: 1
                licensePagesUsed2: 1
                resultItems:
                - nodeId: 1
                  errorCode: ""
                  errorMessage: ""
                  values:
                  - name: TemplateId
                    value: "28"
                  - name: DocumentTypeName
                    value: TestWren
                  - name: DocBoundary
                    value: 0
                  - name: ClassificationId
                    value: d907a548196c4e35837dad51954cd3ed
                  - name: UimData
                    value:
                      docType: TestWren
                      locale: en-US
                      flaggedReason: null
                      extractionId: null
                      nodeList:
                      - name: InvoiceNumber
                        isArray: false
                        indexFieldType: Number
                        labelText: Invoice No.
                        isRequired: true
                        controlType: TextBox
                        data:
                        - arrayIndex: 0
                          value: 227628
                          fieldError:
                            errorCode: ER2208
                            recoverable: false
                            message: "Out of Bounds:Valid values: 1000 ➜ 10210"
                          mustConfirm: true
                          choices: null
                          locationRect:
                            left: 639
                            top: 144
                            width: 124
                            height: 30
                          pageId: 1
                          confidence: 100
                          extractedCharacters: null
              schema:
                $ref: '#/components/schemas/_session_services_classifyextractpage_post_200_response'
          description: |-
            The result item objects will be put in the same order as the request items that were submitted. This can be correlated using the nodeId property if needed.

            - **Values Per Result Item**

              - **DocumentTypeName** - String. This is the Document Type name. e.g. "Form1040EZ". Empty if no match was found.

              - **TemplateId** - String. This is the image template ID provided by the Classify Real-Time Service. This will be "-1" if no match was found.

              - **DocBoundary** - Number. Indicates whether this page defines a document boundary. Valid values are the following integers - 0 - means no document boundary. 1 - means natural separator. 2 - means artificial separator.

              - **ClassificationId** - String. A server-generated ID that is used when learning to classify documents with the "InformationExtraction" project.

              - **UimData** - Object. This is a UIM data information object, which contains the result of the classification and extraction operations.

            - **Files Per Result Item**

              No files are returned by this Real-Time Service.
        "401":
          description: Unauthorized
        "403":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 403
                  code: ER8013
                  message: "[M8013] The user does not have sufficient permissions\
                    \ for the operation."
                  server: WS-S5fcb9d7368af42f0af244010e3ad5907HS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Forbidden
        "415":
          content:
            application/json:
              example:
                returnStatus:
                  status: 415
                  code: ER8016
                  message: "[M8016] The Accept type is not supported for this request."
                  server: WS-Sb29a7dd631e94af5a5439148ea7a5bffHS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Unsupported Media Type
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error
      security:
      - na-1-dev.api.opentext.com: []
      summary: Classify Extract Page Service.
      tags:
      - Real-Time Services
      x-content-type: application/hal+json
      x-accepts: application/json
  /session/services/classifyextractdocument:
    post:
      description: |-
        The Classify Extract Document Service will perform classification and extraction on each item submitted and return an UIM object containing information from the result of classification and extraction. Optionally, the service will perform document separation as configured in the recognition project.

        **Service Properties**

        - **Env** - Metadata environment identifier. Value is one of "D", "T" or "P". Default value is "P".

        - **IncludeOcrData** - Boolean. If true then the returned UIM data object will contain extracted characters information. Otherwise it won't.

        - **EnableDocumentSeparation** - Optional string. Whether to perform auto document separation as per Dpp project folder management settings. Default value is “false”.

        - **Project** - Optional string. The recognition project to use to classify the document. Valid values are "Default" for the Advanced Recognition and "InformationExtraction" for the Information Extraction. If omitted, "Default" is used.

        **Number of Request Items**

        This Real-Time Service supports one or more items.

        **Values Per Request Item**

        - **OcrLocale** - Optional string. The locale that is used for reading text from the image when the request uses the "InformationExtraction" project. If omitted, text is read using the project's classification locale.

        **Files Per Request Item**

        This service supports JPEG, PNG, and TIFF files. Each item can have one or more files. It can either be an embedded file or a reference to a file ID previously posted to the Files Resource. The File Type property for the file is ignored for this service.

        If the request item contains more than one image, then the document type associated with the first classified page is used for the document. The extraction results for all pages belonging to the document type are merged into a single document. If a given field has conflicting values from different pages, then the value is set according to the "Extract Page" visual property for that field in the document type definition.
      requestBody:
        content:
          application/hal+json:
            example:
              serviceProps:
              - name: Env
                value: D
              - name: IncludeOcrData
                value: true
              - name: Project
                value: InformationExtraction
              requestItems:
              - nodeId: 1
                values: null
                files:
                - name: Wren
                  value: F_28741fcd8ea9468fa23bee502f4b19ebTIF
                  contentType: image/tiff
                  fileType: tif
                - name: Wren_p2
                  value: F_2061b933c8e5412aa563a1b9c7ebf337TIF
                  contentType: image/tiff
                  fileType: tif
            schema:
              $ref: '#/components/schemas/servicesRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 200
                  code: OK0000
                  message: ""
                  server: WS-S117316e70dcd4942884f142d79d41295IS
                licenseUsedPercent: 0
                id: ReqCPEXTRAC_3K3_0031108
                serviceName: classifyextractdocument
                executionMilliSeconds: 660
                licensePagesUsed: 1
                licensePagesUsed2: 1
                resultItems:
                - nodeId: 1
                  errorCode: ""
                  errorMessage: ""
                  values:
                  - name: "ClassificationPageIds,"
                    value:
                    - d907a548196c4e35837dad51954cd3ed
                    - 748f4bfce54f4fc084ba19cee31bcccc
                  - name: UimData
                    value:
                      docType: TestWren
                      locale: en-US
                      flaggedReason: null
                      extractionId: 3aff08999e844ff6a31aff002b0fcb4a
                      nodeList:
                      - name: InvoiceNumber
                        isArray: false
                        indexFieldType: Number
                        labelText: Invoice No.
                        isRequired: true
                        controlType: TextBox
                        data:
                        - arrayIndex: 0
                          value: 227628
                          fieldError:
                            errorCode: ER2208
                            recoverable: false
                            message: "Out of Bounds:Valid values: 1000 ➜ 10210"
                          mustConfirm: true
                          choices: null
                          locationRect:
                            left: 639
                            top: 144
                            width: 124
                            height: 30
                          pageId: 1
                          confidence: 100
                          extractedCharacters:
                          - values:
                            - value: "2"
                              confidence: 100
              schema:
                $ref: '#/components/schemas/_session_services_classifyextractpage_post_200_response'
          description: |-
            The result item objects will be put in the same order as the request items that were submitted. This can be correlated using the nodeId property if needed.

            - **Values Per Result Item**

              - **UimData** - Object. This is a UIM data information object, which contains the result of the classification and extraction operations. This value is present if document separation is not enabled (i.e. “EnableDocumentSeparation” service property is “false”).)

              - **UimDataArray** - Array of UimData objects. This value is present if document separation is enabled (i.e. “EnableDocumentSeparation” service property is “true”). Array contains a UimData object for each auto separated document in the order of separated documents. If document separation generated one only one document, then array contains only one UimData for that document.)

              - **DocumentFieldArray** - Array of strings. Array of comma separated list of document file Id references strings. This value is present if document separation is enabled (i.e. “EnableDocumentSeparation” service property is “true”). Array contains a string for each auto separated document in the order of separated documents. If document separation generated one only one document, then array contain only one string of comma separated list of document file Id references for that document only.)

              - **ClassificationPageIds** - Array of strings. An array of server-generated IDs, one per page, that is used when learning to classify documents with the "InformationExtraction" project.

            - **Files Per Result Item**

              No files are returned by this Real-Time Service.
        "401":
          description: Unauthorized
        "403":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 403
                  code: ER8013
                  message: "[M8013] The user does not have sufficient permissions\
                    \ for the operation."
                  server: WS-S5fcb9d7368af42f0af244010e3ad5907HS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Forbidden
        "415":
          content:
            application/json:
              example:
                returnStatus:
                  status: 415
                  code: ER8016
                  message: "[M8016] The Accept type is not supported for this request."
                  server: WS-Sb29a7dd631e94af5a5439148ea7a5bffHS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Unsupported Media Type
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error
      security:
      - na-1-dev.api.opentext.com: []
      summary: Classify Extract Document Service.
      tags:
      - Real-Time Services
      x-content-type: application/hal+json
      x-accepts: application/json
  /session/services/extractpage:
    post:
      description: |-
        The Extract Page Service will perform extraction on each item submitted and return a UIM object containing information from the result.

        **Service Properties**

        - **Env** - Metadata environment identifier. Value is one of "D", "T" or "P". Default value is "P".

        - **IncludeOcrData** - Boolean. If true then the returned UIM data object will contain extracted characters information. Otherwise it won't.

        - **Project** - Optional string. The recognition project to use to classify the document. Valid values are "Default" for the Advanced Recognition and "InformationExtraction" for the Information Extraction. If omitted, "Default" is used.

        **Values Per Request Item**

        - **DocumentTypeName** - String. The Document Type name to be used for extraction. This is optional if the TemplateId property is passed. This value is case sensitive when the request uses the "InformationExtraction" project.

        - **PageIndex** - Number. The zero-based page index within Document Type. If omitted, then it defaults to 0. This is optional if the TemplateId property is passed. Unused if the project is "InformationExtraction".

        - **TemplateId** - String. The image template ID assigned in the recognition project that should be used for extraction. If not supplied, then the DocumentTypeName should be specified. Unused if the project is "InformationExtraction".

        - **OcrLocale** - Optional string. The locale that is used for reading text from the image when the request uses the "InformationExtraction" project. If omitted, text is read using the extraction profile's locale.

        **Files Per Request Item**

        This service supports JPEG, PNG, and TIFF files. There can only be one file per request item object. It can either be an embedded file or a reference to a file ID previously posted to the Files Resource. The File Type property for the file is ignored for this service.

        If the DocumentTypeName and PageIndex are specified, then the data will be extracted based on the index of the template in the order of the template names (not IDs) in the specified document type. If the PageIndex is greater than the number of templates in the document type, then the image is not processed for data extraction.
      requestBody:
        content:
          application/hal+json:
            example:
              serviceProps:
              - name: Env
                value: D
              - name: IncludeOcrData
                value: false
              - name: Project
                value: InformationExtraction
              requestItems:
              - nodeId: 1
                values:
                - name: DocumentTypeName
                  value: TestWren
                - name: TemplateId
                  value: ""
                - name: PageIndex
                  value: "0"
                files:
                - name: Wren
                  value: F_0d7bbf6b26b74960b36aa26523ed4d10TIF
                  contentType: image/tiff
                  fileType: tif
            schema:
              $ref: '#/components/schemas/servicesRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 200
                  code: OK0000
                  message: ""
                  server: WS-S6ac611ec08f243cdb3c9977004953b1fIS
                licenseUsedPercent: 0
                id: ReqCPEXTRAC_3K3_0031049
                serviceName: extractpage
                executionMilliSeconds: 600
                licensePagesUsed: 1
                licensePagesUsed2: 0
                resultItems:
                - nodeId: 1
                  errorCode: ""
                  errorMessage: ""
                  values:
                  - name: ClassificationId
                    value: d907a548196c4e35837dad51954cd3ed
                  - name: UimData
                    value:
                      docType: TestWren
                      locale: en-US
                      flaggedReason: null
                      extractionId: null
                      nodeList:
                      - name: InvoiceNumber
                        isArray: false
                        indexFieldType: Number
                        labelText: Invoice No.
                        isRequired: true
                        controlType: TextBox
                        data:
                        - arrayIndex: 0
                          value: 227628
                          fieldError:
                            errorCode: ER2208
                            recoverable: false
                            message: "Out of Bounds:Valid values: 1000 ➜ 10210"
                          mustConfirm: true
                          choices: null
                          locationRect:
                            left: 639
                            top: 144
                            width: 124
                            height: 30
                          pageId: 1
                          confidence: 100
                          extractedCharacters: null
              schema:
                $ref: '#/components/schemas/_session_services_classifyextractpage_post_200_response'
          description: |-
            The result item objects will be put in the same order as the request items that were submitted. This can be correlated using the nodeId property if needed.

            - **Values Per Result Item**

              - **UimData** - Object. This is a UIM data information object, which contains the result of the extraction operation.

              - **ClassificationId** - String. A server-generated ID that is used when learning to classify documents with the "InformationExtraction" project.

            - **Files Per Result Item**

              No files are returned by this Real-Time Service.
        "401":
          description: Unauthorized
        "403":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 403
                  code: ER8013
                  message: "[M8013] The user does not have sufficient permissions\
                    \ for the operation."
                  server: WS-S5fcb9d7368af42f0af244010e3ad5907HS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Forbidden
        "415":
          content:
            application/json:
              example:
                returnStatus:
                  status: 415
                  code: ER8016
                  message: "[M8016] The Accept type is not supported for this request."
                  server: WS-Sb29a7dd631e94af5a5439148ea7a5bffHS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Unsupported Media Type
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error
      security:
      - na-1-dev.api.opentext.com: []
      summary: Extract Page Service.
      tags:
      - Real-Time Services
      x-content-type: application/hal+json
      x-accepts: application/json
  /session/services/extractdocument:
    post:
      description: |-
        The Extract Document Service will perform extraction on each item submitted and return a UIM object containing information from the result.

        **Service Properties**

        - **Env** - Metadata environment identifier. Value is one of "D", "T" or "P". Default value is "P".

        - **IncludeOcrData** - Boolean. If true then the returned UIM data object will contain extracted characters information. Otherwise it won't.

        - **Project** - Optional string. The recognition project to use to classify the document. Valid values are "Default" for the Advanced Recognition and "InformationExtraction" for the Information Extraction. If omitted, "Default" is used.

        **Values Per Request Item**

        - **DocumentTypeName** String. The Document Type name to be used for extraction. This is ignored if the TemplateIds property is passed. This value is case sensitive when the request uses the "InformationExtraction" project.

        - **TemplateIds** - Array of Strings. The image template IDs assigned in the recognition project that are used for extraction. If not supplied, then the DocumentTypeName must be specified. Unused if the project is "InformationExtraction". To skip a extraction from a page, set the template ID for that page to "-2".

        - **RepeatLastTemplate** - Boolean. If true and if the TemplateIds array has fewer entries than the request item has files, the last template ID is applied to the remaining files in the request item.

        - **OcrLocale** - Optional string. The locale that is used for reading text from the image when the request uses the "InformationExtraction" project. If omitted, text is read using the extraction profile's locale.

        **Files Per Request Item**

        This service supports JPEG, PNG, and TIFF files. Each item can have one or more files. It can either be an embedded file or a reference to a file ID previously posted to the Files Resource. The File Type property for the file is ignored for this service.

        If the TemplateIds property is not included in the request, more than one image is sent, and the DocumentTypeName is specified, then the images are processed as follows. First, the templates in the specified document type are ordered by name (not ID). Then, the first template in the list is used for the first file in the request item, the second template in the list is used for the second file in the request item, and so forth. If the request item contains more images than there are templates in the document type, then the extra images are not processed for data extraction.
      requestBody:
        content:
          application/hal+json:
            example:
              serviceProps:
              - name: Env
                value: D
              - name: IncludeOcrData
                value: true
              - name: Project
                value: InformationExtraction
              requestItems:
              - nodeId: 1
                values:
                - name: DocumentTypeName
                  value: TestWren
                - name: TemplateIds
                  value:
                  - "28"
                - name: RepeatLastTemplate
                  value: false
                files:
                - name: Wren
                  value: F_113aecccef734e448bec8d254ae4e059TIF
                  contentType: image/tiff
                  fileType: tif
                - name: Wren_p2
                  value: F_2061b933c8e5412aa563a1b9c7ebf337TIF
                  contentType: image/tiff
                  fileType: tif
            schema:
              $ref: '#/components/schemas/servicesRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 200
                  code: OK0000
                  message: ""
                  server: WS-Sa3586a2353bb48c0b7131c9875f61e69IS
                licenseUsedPercent: 0
                id: REQ6
                serviceName: extractdocument
                executionMilliSeconds: 663
                licensePagesUsed: 1
                licensePagesUsed2: 0
                resultItems:
                - nodeId: 1
                  errorCode: ""
                  errorMessage: ""
                  values:
                  - name: "ClassificationPageIds,"
                    value:
                    - d907a548196c4e35837dad51954cd3ed
                    - 748f4bfce54f4fc084ba19cee31bcccc
                  - name: UimData
                    value:
                      docType: TestWren
                      locale: en-US
                      flaggedReason: null
                      extractionId: 3aff08999e844ff6a31aff002b0fcb4a
                      nodeList:
                      - name: InvoiceNumber
                        isArray: false
                        indexFieldType: Number
                        labelText: Invoice No.
                        isRequired: true
                        controlType: TextBox
                        data:
                        - arrayIndex: 0
                          value: 227628
                          fieldError:
                            errorCode: ER2208
                            recoverable: false
                            message: "Out of Bounds:Valid values: 1000 ➜ 10210"
                          mustConfirm: true
                          choices: null
                          locationRect:
                            left: 639
                            top: 144
                            width: 124
                            height: 30
                          pageId: 1
                          confidence: 100
                          extractedCharacters:
                          - values:
                            - value: "2"
                              confidence: 100
              schema:
                $ref: '#/components/schemas/_session_services_classifyextractpage_post_200_response'
          description: |-
            The result item objects will be put in the same order as the request items that were submitted. This can be correlated using the nodeId property if needed.

            - **Values Per Result Item**

              - **UimData** - Object. This is a UIM data information object, which contains the result of the extraction operation.

              - **ClassificationPageIds** - Array of strings. An array of server-generated IDs, one per page, that is used when learning to classify documents with the "InformationExtraction" project.

            - **Files Per Result Item**

              No files are returned by this Real-Time Service.
        "401":
          description: Unauthorized
        "403":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 403
                  code: ER8013
                  message: "[M8013] The user does not have sufficient permissions\
                    \ for the operation."
                  server: WS-S5fcb9d7368af42f0af244010e3ad5907HS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Forbidden
        "415":
          content:
            application/json:
              example:
                returnStatus:
                  status: 415
                  code: ER8016
                  message: "[M8016] The Accept type is not supported for this request."
                  server: WS-Sb29a7dd631e94af5a5439148ea7a5bffHS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Unsupported Media Type
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error
      security:
      - na-1-dev.api.opentext.com: []
      summary: Extract Document Service.
      tags:
      - Real-Time Services
      x-content-type: application/hal+json
      x-accepts: application/json
  /session/services/uimdata:
    post:
      description: |-
        The UimData Real-Time Service will provide either UIM (Unified Indexing Model) data population or validation or both population and validation. The population and validation rules referenced below are developed in the Designer when constructing a Document Type. Please see the Designer documentation for more information about rules and Document Types.

        **Service Properties**

        - **Env** - Metadata environment identifier. Value is one of "D", "T" or "P". Default value is "P".

        **Number of Request Items**

        This Real-Time Service supports one or more items.

        **Values Per Request Item**

        - **Command** - String. Valid values:
          - **Validate** - UimData is validated as per validation rules,
          - **Populate** - UimData fields are populated using population rules, or
          - **PopulateAndValidate** - UimData fields are populated using population rules and then the data is validated per data validation rules.

        - **TriggerReference** - String. Name of the field that is used as a population trigger or population target. Used only for Populate or PopulateAndValidate commands. If this is empty or not provided, then the service will run all the rules on the supplied UimData. If it is populated, then it will only run rules that are not one-time rules.

        - **TriggerKind** - String. One of the following values. Used only for Populate or PopulateAndValidate commands.
          - **Calculate** - The first expression population rule where TriggerReference is used as the target field is run. This can also be an array field name with a valid row index specified in PopulateTriggerRow,
          - **Lookup** - All population rules of type DatabaseLookup are run in the specified order, where the TriggerReference is one of the trigger fields. This can also be an array field name with a valid row index specified in PopulateTriggerRow, or
          - **PopulateOptions** - The first DatebaseLookup rule is run where TriggerReference is one of the trigger fields and the Choice values are populated by the first two columns of the result set. This can also be an array field name with a valid row index specified in PopulateTriggerRow.

        - **PopulateTriggerRow** - Integer. This is a zero based row index for array field based population. This property is ignored if no field name was supplied in the "triggerReference" property or if the field name supplied is not an array field. The operation will also fail if the index supplied for this property is invalid for the supplied array field name.

        - **UimData** - Object. This is a UIM data information object that you want the service to use for performing the command.

        **Files Per Request Item**

        No files are necessary or used.
      requestBody:
        content:
          application/hal+json:
            example:
              serviceProps: []
              requestItems:
              - nodeId: 1
                values:
                - name: Command
                  value: Populate
                - name: TriggerReference
                  value: ID
                - name: TriggerKind
                  value: Lookup
                - name: UimData
                  value:
                    docType: Employee
                    locale: en-US
                    flaggedReason: null
                    extractionId: 3aff08999e844ff6a31aff002b0fcb4a
                    nodeList:
                    - name: ID
                      isArray: false
                      indexFieldType: string
                      labelText: ID
                      isRequired: false
                      controlType: TextBox
                      data:
                      - arrayIndex: 0
                        value: "1234"
                        fieldError: null
                        mustConfirm: false
                        choices: null
                    - name: Name
                      isArray: false
                      indexFieldType: string
                      labelText: Name
                      isRequired: false
                      controlType: TextBox
                      data:
                      - arrayIndex: 0
                        value: ""
                        fieldError: null
                        mustConfirm: false
                        choices: null
                        locationRect: null
                        pageId: 0
                        confidence: 100
            schema:
              $ref: '#/components/schemas/servicesRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 200
                  code: OK0000
                  message: ""
                  server: WS-S7699312da37548f4a2bf9921c4a66d90
                id: REQ1
                serviceName: UimData
                executionMilliSeconds: 847
                licenseUsedPercent: 0
                resultItems:
                - nodeId: 1
                  errorCode: ""
                  errorMessage: ""
                  values:
                  - name: UimData
                    value:
                      docType: Employee
                      locale: en-US
                      flaggedReason: null
                      extractionId: 3aff08999e844ff6a31aff002b0fcb4a
                      nodeList:
                      - name: ID
                        isArray: false
                        indexFieldType: string
                        labelText: ID
                        isRequired: false
                        controlType: TextBox
                        data:
                        - arrayIndex: 0
                          value: "1234"
                          fieldError: null
                          mustConfirm: false
                          choices: null
                          locationRect:
                            left: 0
                            top: 0
                            width: 0
                            height: 0
                          pageId: 0
                          confidence: 100
                      - name: Name
                        isArray: false
                        indexFieldType: string
                        labelText: Name
                        isRequired: false
                        controlType: TextBox
                        data:
                        - arrayIndex: 0
                          value: John Doe
                          fieldError: null
                          mustConfirm: false
                          choices: null
                          locationRect:
                            left: 0
                            top: 0
                            width: 0
                            height: 0
                          pageId: 0
                          confidence: 100
              schema:
                $ref: '#/components/schemas/_session_services_uimdata_post_200_response'
          description: |-
            The result item objects will be put in the same order as the request items that were submitted. This can be correlated using the nodeId property if needed.

            - **Values Per Result Item**

              - **UimData** - Object. This is a UIM data information object, which contains the result of the service operation.

            - **Files Per Result Item**

              No files are returned by thie Real-Time Service.
        "401":
          description: Unauthorized
        "403":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 403
                  code: ER8013
                  message: "[M8013] The user does not have sufficient permissions\
                    \ for the operation."
                  server: WS-S5fcb9d7368af42f0af244010e3ad5907HS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Forbidden
        "415":
          content:
            application/json:
              example:
                returnStatus:
                  status: 415
                  code: ER8016
                  message: "[M8016] The Accept type is not supported for this request."
                  server: WS-Sb29a7dd631e94af5a5439148ea7a5bffHS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Unsupported Media Type
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error
      security:
      - na-1-dev.api.opentext.com: []
      summary: UIMData Service.
      tags:
      - Real-Time Services
      x-content-type: application/hal+json
      x-accepts: application/json
  /session/services/processimagepipeline:
    post:
      description: |-
        The Process Image Pipeline Real-Time services executes a series of image services on a single image based on service properties. The order of services execution is as follows::
          - Image Enhancement
          - Classify
          - Extract

        Outputs of all executed services are combined and returned in the response.

        **Service Properties**

        - **Env** - Metadata environment identifier. Value is one of "D", "T" or "P". Default value is "P".

        - **ImageProfile** - If non empty, the incoming image is enhanced.

        - **ReturnFileDataInline** - Boolean. If true, then the resulting file is returned inline in the result item as a base64 encoded file. If false, then the resulting file is returned as a fileId and can be retrieved through the Files resource. Default value is true. Applicable only if image enhancement is done. File ID referncing the resulting file is returned as part of URI in "src" property of File object of Result Item.

        - **Classify** - Boolean. Classify the image.

        - **Extract** - Boolean. Extract the image. If this is set then ClassifyAndExtract is performed on the image and “Classify” flag is ignored.

        - **IncludeOcrData** - Boolean. If true then the returned UIM data object will contain extracted characters information. Otherwise it won't.

        - **Project** - Optional string. The recognition project to use to classify the document. Valid values are "Default" for the Advanced Recognition and "InformationExtraction" for the Information Extraction. If omitted, "Default" is used.

        - **OcrLocale** - Optional string. The locale that is used for reading text from the image when the request uses the "InformationExtraction" project. If omitted, text is read using the project's classification locale.

        **Number of Request Items**

        This Real-Time Service supports one or more items.

        **Values Per Request Item**

        No values are necessary or used.

        **Files Per Request Item**

        This service supports JPEG, PNG, and TIFF files. There can only be one file in request item object. It can either be an embedded file or a reference to a file ID previously posted to the Files Resource.
      requestBody:
        content:
          application/hal+json:
            example:
              serviceProps:
              - name: Env
                value: D
              - name: ImageProfile
                value: DistractionRemoval
              - name: Extract
                value: true
              - name: ReturnFileDataInline
                value: false
              - name: IncludeOcrData
                value: false
              - name: Project
                value: InformationExtraction
              requestItems:
              - nodeId: 1
                values: null
                files:
                - name: Wren
                  value: F_ac92828e036e402687e020dbb8f3f4c0TIF
                  contentType: image/tiff
                  fileType: tif
            schema:
              $ref: '#/components/schemas/servicesRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 200
                  code: OK0000
                  message: ""
                  server: WS-S406d66e561d54f99b74f71aeca31fc46IS
                id: Req34W_3
                serviceName: processimagepipeline
                executionMilliSeconds: 968
                licensePagesUsed: 0
                licensePagesUsed2: 0
                resultItems:
                - nodeId: 1
                  errorCode: ""
                  errorMessage: ""
                  values:
                  - name: BlackBarLeft
                    value: 0
                  - name: BlackBarTop
                    value: 0
                  - name: BlackBarRight
                    value: 0
                  - name: BlackBarBottom
                    value: 0
                  - name: TemplateId
                    value: "28"
                  - name: DocumentTypeName
                    value: TestWren
                  - name: DocBoundary
                    value: 0
                  - name: ClassificationId
                    value: d907a548196c4e35837dad51954cd3ed
                  - name: UimData
                    value:
                      docType: TestWren
                      locale: en-US
                      flaggedReason: null
                      extractionId: 3aff08999e844ff6a31aff002b0fcb4a
                      packageName: ""
                      nodeList:
                      - name: InvoiceNumber
                        isArray: false
                        indexFieldType: Number
                        labelText: Invoice No.
                        isRequired: true
                        controlType: TextBox
                        data:
                        - arrayIndex: 0
                          value: null
                          fieldError: null
                          mustConfirm: true
                          choices: null
                          locationRect:
                            left: 639
                            top: 144
                            width: 124
                            height: 30
                          pageId: 1
                          confidence: 100
                          extractedCharacters: null
                  files:
                  - name: Wren
                    value: F_3dce19d31ad948c7a48e92cad7ee0090TIF
                    contentType: image/tiff
                    src: "https://{host}/cp-rest/v2/session/files/F_3dce19d31ad948c7a48e92cad7ee0090TIF"
                    fileType: tif
              schema:
                $ref: '#/components/schemas/_session_services_processimagepipeline_post_200_response'
          description: |-
            **Values**

            - The values returned by all services executed. Please refer to Real-Time services for the values returned.

            **Files**

            - Enhanced image file if image was enhanced.
        "401":
          description: Unauthorized
        "403":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 403
                  code: ER8013
                  message: "[M8013] The user does not have sufficient permissions\
                    \ for the operation."
                  server: WS-S5fcb9d7368af42f0af244010e3ad5907HS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Forbidden
        "415":
          content:
            application/json:
              example:
                returnStatus:
                  status: 415
                  code: ER8016
                  message: "[M8016] The Accept type is not supported for this request."
                  server: WS-Sb29a7dd631e94af5a5439148ea7a5bffHS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Unsupported Media Type
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error
      security:
      - na-1-dev.api.opentext.com: []
      summary: Process Image Pipeline Service.
      tags:
      - Real-Time Services
      x-content-type: application/hal+json
      x-accepts: application/json
  /session/services/learning:
    post:
      description: |-
        The Learning service is used to learn to classify and/or extract a document using the Information Extraction recognition project. The document must previously have been processed with one of the services that classify and/or extract the document in order to generate the needed server-side data for learning. Extraction IDs (extractionId) returned by the following services cannot be used for learning: Classify, ClassifyExtractPage, and ExtractPage. However, extraction IDs that are returned from the following services can be used: ClassifyExtractDocument, and ExtractDocument. In other words, only extraction IDs coming from document level classify or extract services are valid. Now, there are two situations where learning IDs will be invalid. First, if you change the structure of the batch such as rearranging pages, deleting pages, or adding new pages after you have called those APIs for classification and extraction, then you will need to clear the Extraction IDs (extractionId) in the UIMData as they will be invalid for learning. Second, if you modify a page such as rotating or cropping it, supply null for that page's classification ID instead of the ID returned by the classification APIs as the change to the image invalidates its classification.

        For more efficient processing, if a document classified or extracted with the Information Extraction project will not be learned, the learning service should still be called with the learning mode set to "None". This will delete any temporary server-side data that would otherwise be used for learning.

        **Service Properties**

        - **Env** - Metadata environment identifier. Value is one of "D", "T" or "P". Default value is "P".

        - **Project** - String. Must be set to "InformationExtraction" for the Information Extraction project.

        **Number of Request Items**

        This Real-Time Service supports one or more items.

        **Values Per Request Item**

        - **Mode** - String. Valid values:
          - **Classify** - Learn to classify the supplied document.
          - **Extract** - Learn to extract the supplied document.
          - **ClassifyExtract** - Learn to both classify and extract the supplied document.
          - **None** - Do not learn, but remove any temporary server-side data used for learning the supplied document.

        - **UimData** - Object. This is a UIM data information object to be used for learning to extract. Learning works best if the field values have location rectangles. The page IDs for the field values are 0-based page numbers in this call.

        - **DocumentType** String. The Document Type name to be used for learning to classify.

        - **ClassificationPageIds** - Array of strings. The array of server-generated IDs, one per page, returned by classification functions. The service will use these values to learn to classify. If the entire document was extracted, this is the "ClassificationPageIds" returned by the extraction call. If the document was extracted page-by-page, it is an array of the per-page classification IDs. The values in the list must have the same order as the pages in the document.

        **Files Per Request Item**

        This service supports JPEG, PNG, and TIFF files. Each item can have one or more files. It can either be an embedded file or a reference to a file ID previously posted to the Files Resource. The File Type property for the file is ignored for this service.
      requestBody:
        content:
          application/hal+json:
            example:
              serviceProps:
              - name: Env
                value: D
              - name: Project
                value: InformationExtraction
              requestItems:
              - nodeId: 1
                values:
                - name: Mode
                  value: ClassifyExtract
                - name: DocumentType
                  value: TestWren
                - name: ClassificationPageIds
                  value:
                  - d907a548196c4e35837dad51954cd3ed
                  - 748f4bfce54f4fc084ba19cee31bcccc
                - name: UimData
                  value:
                    docType: TestWren
                    locale: en-US
                    flaggedReason: null
                    extractionId: 3aff08999e844ff6a31aff002b0fcb4a
                    nodeList:
                    - name: InvoiceNumber
                      isArray: false
                      indexFieldType: Number
                      labelText: Invoice No.
                      isRequired: true
                      controlType: TextBox
                      data:
                      - arrayIndex: 0
                        value: 227628
                        fieldError:
                          errorCode: ER2208
                          recoverable: false
                          message: "Out of Bounds:Valid values: 1000 ➜ 10210"
                        mustConfirm: true
                        choices: null
                        locationRect:
                          left: 639
                          top: 144
                          width: 124
                          height: 30
                        pageId: 0
                        confidence: 100
                        extractedCharacters:
                        - values:
                          - value: "2"
                            confidence: 100
                files:
                - name: Wren
                  value: F_30fd48db3ba14157ade16ba6b7f8c8a9TIF
                  contentType: image/tiff
                  fileType: tif
                - name: Wren_p2
                  value: F_2061b933c8e5412aa563a1b9c7ebf337TIF
                  contentType: image/tiff
                  fileType: tif
            schema:
              $ref: '#/components/schemas/servicesRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 200
                  code: OK0000
                  message: ""
                  server: WS-Sbf77b6cf64a140c5ad4db11b8cdba56aIS
                licenseUsedPercent: 0
                id: ReqCPEXTRAC_33B_0041250
                serviceName: learning
                executionMilliSeconds: 128
                licensePagesUsed: 1
                licensePagesUsed2: 0
                resultItems:
                - nodeId: 1
                  errorCode: ""
                  errorMessage: ""
                  values: []
                  files: []
              schema:
                $ref: '#/components/schemas/_session_services_convertimages_post_200_response'
          description: |-
            The result item objects will be put in the same order as the request items that were submitted. This can be correlated using the nodeId property if needed.

            - **Values Per Result Item**

              No values are returned in the result item objects.

            - **Files Per Result Item**

              No files are returned by this Real-Time Service.
        "401":
          description: Unauthorized
        "403":
          content:
            application/hal+json:
              example:
                returnStatus:
                  status: 403
                  code: ER8013
                  message: "[M8013] The user does not have sufficient permissions\
                    \ for the operation."
                  server: WS-S5fcb9d7368af42f0af244010e3ad5907HS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Forbidden
        "415":
          content:
            application/json:
              example:
                returnStatus:
                  status: 415
                  code: ER8016
                  message: "[M8016] The Accept type is not supported for this request."
                  server: WS-Sb29a7dd631e94af5a5439148ea7a5bffHS
              schema:
                $ref: '#/components/schemas/__get_415_response'
          description: Unsupported Media Type
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error
      security:
      - na-1-dev.api.opentext.com: []
      summary: Learning Service
      tags:
      - Real-Time Services
      x-content-type: application/hal+json
      x-accepts: application/json
components:
  responses:
    "415NotSupported":
      content:
        application/json:
          example:
            returnStatus:
              status: 415
              code: ER8016
              message: "[M8016] The Accept type is not supported for this request."
              server: WS-Sb29a7dd631e94af5a5439148ea7a5bffHS
          schema:
            $ref: '#/components/schemas/__get_415_response'
      description: Unsupported Media Type
    "403Forbidden":
      content:
        application/hal+json:
          example:
            returnStatus:
              status: 403
              code: ER8013
              message: "[M8013] The user does not have sufficient permissions for\
                \ the operation."
              server: WS-S5fcb9d7368af42f0af244010e3ad5907HS
          schema:
            $ref: '#/components/schemas/__get_415_response'
      description: Forbidden
    "200DeleteResponse":
      content:
        application/hal+json:
          example:
            returnStatus:
              status: 200
              code: OK0000
              message: ""
              server: WS-Sb29a7dd631e94af5a5439148ea7a5bffHS
          schema:
            $ref: '#/components/schemas/returnStatusBody'
      description: OK
    "200FileResponse":
      content:
        application/hal+json:
          example:
            returnStatus:
              status: 200
              code: OK0000
              message: ""
              server: WS-S842b1bccd3fd4d2e86b33a844adaf5c1
            id: f_128b1931b51643979a2580f5820dec4ftif
            contentType: image/jpeg
            src: "https://{host}/cp-rest/session/v2/files/f_128b1931b51643979a2580f5820dec4fjpg"
            updated: 2016-03-31T22:22:35.1995491Z
          schema:
            $ref: '#/components/schemas/_session_files_post_201_response'
      description: OK or Created
  schemas:
    returnStatusBody:
      description: Returned only if user is authenticated.
      example:
        server: server
        code: code
        substatus: 6
        message: message
        status: 0
      properties:
        status:
          type: integer
        substatus:
          type: integer
        code:
          type: string
        message:
          type: string
        server:
          type: string
      type: object
    linkHref:
      example:
        href: https://openapi-generator.tech
      properties:
        href:
          format: uri
          type: string
      type: object
    resourceLinks:
      description: Link relations.
      properties:
        self:
          $ref: '#/components/schemas/resourceLinks_self'
      type: object
    baseHalJsonResponseForBatches:
      properties:
        returnStatus:
          $ref: '#/components/schemas/returnStatusBody'
        id:
          description: Feed or Entry instance identifier.
          type: string
        title:
          description: Simple localized title for the feed.
          type: string
        _links:
          $ref: '#/components/schemas/resourceLinks'
      type: object
    baseHalJsonResponse:
      allOf:
      - $ref: '#/components/schemas/baseHalJsonResponseForBatches'
      - properties:
          updated:
            description: Feed or Entry date in UTC in ISO 8601 (e.g. 2006-04-17T21:22:48.2698750Z)
            format: date-time
            type: string
        type: object
    baseEmbedded:
      properties:
        id:
          description: Item instance identifier.
          format: uri
          type: string
        title:
          type: string
        updated:
          description: Entry date in UTC in ISO 8601 (e.g. 2006-04-17T21:22:48.2698750Z)
          format: date-time
          type: string
        _links:
          $ref: '#/components/schemas/resourceLinks'
      type: object
    env:
      default: P
      enum:
      - D
      - T
      - P
      type: string
    embeddedServiceLinksContent:
      properties:
        content:
          $ref: '#/components/schemas/embeddedServiceLinksContent_content'
      type: object
    embeddedServiceLinks:
      properties:
        collection:
          items:
            $ref: '#/components/schemas/embeddedServiceLinks_collection_inner'
          type: array
      type: object
    servicesRequestBody:
      properties:
        serviceProps:
          items:
            $ref: '#/components/schemas/servicesRequestBody_serviceProps_inner'
          type: array
        requestItems:
          items:
            $ref: '#/components/schemas/servicesRequestBody_requestItems_inner'
          type: array
      type: object
    commonServiceResponse:
      properties:
        returnStatus:
          $ref: '#/components/schemas/returnStatusBody'
        id:
          type: string
        serviceName:
          type: string
        executionMilliSeconds:
          type: string
      type: object
    licensePercent:
      properties:
        licenseUsedPercent:
          type: integer
    licenseUsed:
      properties:
        licensePagesUsed:
          type: integer
        licensePagesUsed2:
          type: integer
    basicResultItem:
      properties:
        nodeId:
          type: integer
        errorCode:
          type: string
        errorMessage:
          type: string
      type: object
    resultItemValues:
      properties:
        values:
          items:
            $ref: '#/components/schemas/servicesRequestBody_serviceProps_inner'
          type: array
    basicResultItemWithValues:
      allOf:
      - $ref: '#/components/schemas/basicResultItem'
      - $ref: '#/components/schemas/resultItemValues'
    resultItemFiles:
      properties:
        files:
          items:
            $ref: '#/components/schemas/resultItemFiles_files_inner'
          type: array
    basicResultItemWithFiles:
      allOf:
      - $ref: '#/components/schemas/basicResultItemWithValues'
      - $ref: '#/components/schemas/resultItemFiles'
    basicResultItemWithValuesAndFiles:
      allOf:
      - $ref: '#/components/schemas/basicResultItemWithValues'
      - $ref: '#/components/schemas/resultItemFiles'
    resultItemsBasicWithValuesArray:
      properties:
        resultItems:
          items:
            $ref: '#/components/schemas/basicResultItemWithValues'
          type: array
    resultItemsBasicWithFilesArray:
      properties:
        resultItems:
          items:
            $ref: '#/components/schemas/basicResultItemWithFiles'
          type: array
    resultItemsBasicWithValuesAndFilesArray:
      properties:
        resultItems:
          items:
            $ref: '#/components/schemas/basicResultItemWithValuesAndFiles'
          type: array
    uimData:
      description: The UIM data information object is returned by some Real-Time Services.
        This object contains information about the Document Type associated with a
        set of one or more images along with the data for the fields. This object
        is defined as follows.
      properties:
        docType:
          description: The name of the document type.
          type: string
        locale:
          description: The culture code
          type: string
        flaggedReason:
          description: "Specifies the reason for the validation error. This will only\
            \ be filled on \"Populate\" and \"PopulateAndValidate\" commands if there\
            \ is an error. Otherwise, it is null."
          type: string
        extractionId:
          description: A ID generated by the server during document (not page) extraction
            that is used when learning to extract documents with the "InformationExtraction"
            project.
          type: string
        nodeList:
          items:
            $ref: '#/components/schemas/uimData_nodeList_inner'
          type: array
      type: object
    tableItemContent:
      properties:
        content:
          $ref: '#/components/schemas/tableItemContent_content'
      type: object
    docItemContent:
      properties:
        content:
          $ref: '#/components/schemas/docItemContent_content'
      type: object
    inlineFileRequestBody:
      properties:
        data:
          description: The file data must be sent as a base64 encoded string.
          type: string
        contentType:
          description: "Optional. The acceptable Content-Type for the file. If not\
            \ provided, then application/octet-stream will be assumed."
          enum:
          - image/tiff
          - application/msword
          - application/octet-stream
          - application/rtf
          - application/pdf
          - image/jpeg
          - image/png
          - text/plain
          type: string
        offset:
          description: Optional. Only used for chunking. The offset has to be counted
            in bytes and is used to add or retry a chunk. Chunks must be added without
            gaps.
          type: integer
      type: object
    batchItemContent:
      properties:
        content:
          $ref: '#/components/schemas/batchItemContent_content'
      type: object
    __get_200_response__links_urn_eim_linkrel_session:
      description: Provides an href to the Session resource to login or logoff from
        the service.
      example:
        href: https://openapi-generator.tech
      properties:
        href:
          format: uri
          type: string
      type: object
    __get_200_response__links_urn_eim_linkrel_tables:
      description: Provides an href to the Tables resource. This resource allows you
        access to the Tables that are available in the system.
      example:
        href: https://openapi-generator.tech
      properties:
        href:
          format: uri
          type: string
      type: object
    __get_200_response__links_urn_eim_linkrel_data_batches:
      description: Provides an href to the Batches resource. This resource allows
        you access to create and export a batch.
      example:
        href: https://openapi-generator.tech
      properties:
        href:
          format: uri
          type: string
      type: object
    __get_200_response__links_urn_eim_linkrel_files:
      description: Provides an href to the Files resource. This resource allows you
        to generate stage files for Service Requests.
      example:
        href: https://openapi-generator.tech
      properties:
        href:
          format: uri
          type: string
      type: object
    __get_200_response__links_urn_eim_linkrel_services:
      description: Provides an href to the Services resource. This resource allows
        you to generate Service Requests for Real-Time Services.
      example:
        href: https://openapi-generator.tech
      properties:
        href:
          format: uri
          type: string
      type: object
    __get_200_response__links_urn_eim_linkrel_doctypes:
      description: Provides an href to the Document Types resource. This resource
        allows you access to the Document Types that are available in the system.
      example:
        href: https://openapi-generator.tech
      properties:
        href:
          format: uri
          type: string
      type: object
    __get_200_response__links_about:
      description: Provides an href to the Product Information resource. This resource
        displays product information about the Services.
      example:
        href: https://openapi-generator.tech
      properties:
        href:
          format: uri
          type: string
      type: object
    __get_200_response__links_oauth2_token:
      description: Provides href to generate token to authorize with server.
      example:
        href: https://openapi-generator.tech
      properties:
        href:
          format: uri
          type: string
      type: object
    __get_200_response__links_oauth2_authorize:
      description: Provides href to authorize user.
      example:
        href: https://openapi-generator.tech
      properties:
        href:
          format: uri
          type: string
      type: object
    __get_200_response__links:
      example:
        urn:eim:linkrel:tables:
          href: https://openapi-generator.tech
        urn:eim:linkrel:services:
          href: https://openapi-generator.tech
        oauth2-token:
          href: https://openapi-generator.tech
        urn:eim:linkrel:session:
          href: https://openapi-generator.tech
        oauth2-authorize:
          href: https://openapi-generator.tech
        urn:eim:linkrel:files:
          href: https://openapi-generator.tech
        about:
          href: https://openapi-generator.tech
        urn:eim:linkrel:doctypes:
          href: https://openapi-generator.tech
        urn:eim:linkrel:data-batches:
          href: https://openapi-generator.tech
      properties:
        urn:eim:linkrel:session:
          $ref: '#/components/schemas/__get_200_response__links_urn_eim_linkrel_session'
        urn:eim:linkrel:tables:
          $ref: '#/components/schemas/__get_200_response__links_urn_eim_linkrel_tables'
        urn:eim:linkrel:data-batches:
          $ref: '#/components/schemas/__get_200_response__links_urn_eim_linkrel_data_batches'
        urn:eim:linkrel:files:
          $ref: '#/components/schemas/__get_200_response__links_urn_eim_linkrel_files'
        urn:eim:linkrel:services:
          $ref: '#/components/schemas/__get_200_response__links_urn_eim_linkrel_services'
        urn:eim:linkrel:doctypes:
          $ref: '#/components/schemas/__get_200_response__links_urn_eim_linkrel_doctypes'
        about:
          $ref: '#/components/schemas/__get_200_response__links_about'
        oauth2-token:
          $ref: '#/components/schemas/__get_200_response__links_oauth2_token'
        oauth2-authorize:
          $ref: '#/components/schemas/__get_200_response__links_oauth2_authorize'
      type: object
    __get_200_response:
      example:
        _links:
          urn:eim:linkrel:tables:
            href: https://openapi-generator.tech
          urn:eim:linkrel:services:
            href: https://openapi-generator.tech
          oauth2-token:
            href: https://openapi-generator.tech
          urn:eim:linkrel:session:
            href: https://openapi-generator.tech
          oauth2-authorize:
            href: https://openapi-generator.tech
          urn:eim:linkrel:files:
            href: https://openapi-generator.tech
          about:
            href: https://openapi-generator.tech
          urn:eim:linkrel:doctypes:
            href: https://openapi-generator.tech
          urn:eim:linkrel:data-batches:
            href: https://openapi-generator.tech
      properties:
        _links:
          $ref: '#/components/schemas/__get_200_response__links'
      type: object
    __get_415_response:
      properties:
        returnStatus:
          $ref: '#/components/schemas/returnStatusBody'
      type: object
    _about_get_200_response:
      example:
        serviceVersion: serviceVersion
        copyright: copyright
        buildVersion: buildVersion
        productVersion: productVersion
        serverDate: serverDate
        schemaVersion: schemaVersion
        minDesignerVersion: minDesignerVersion
        returnStatus:
          server: server
          code: code
          substatus: 6
          message: message
          status: 0
        designerVersion: designerVersion
        serviceName: serviceName
        serverId: serverId
        productName: productName
      properties:
        returnStatus:
          $ref: '#/components/schemas/returnStatusBody'
        serviceName:
          description: Name of the service.
          type: string
        productName:
          description: Name of the Product
          type: string
        copyright:
          description: Copyright string
          type: string
        serviceVersion:
          description: Four part version information for the Service.
          type: string
        buildVersion:
          description: Four part version for the build.
          type: string
        productVersion:
          description: Four part product version.
          type: string
        schemaVersion:
          description: Table schema version (internal).
          type: string
        designerVersion:
          description: Designer tool version.
          type: string
        serverDate:
          description: Server date in UTC in ISO 8601 (e.g. 2006-04-17T21:22:48.2698750Z).
          type: string
        serverId:
          description: The server id that serviced the request.
          type: string
        minDesignerVersion:
          description: Minimum required Designer tool version.
          type: string
      type: object
    _session_get_200_response__links_urn_eim_linkrel_logoff:
      example:
        href: https://openapi-generator.tech
      properties:
        href:
          description: This is the link relation that references the URI to use for
            performing a logoff. It allows for ending the session and clearing the
            session files.
          format: uri
          type: string
      type: object
    _session_get_200_response__links:
      example:
        self:
          href: https://openapi-generator.tech
        urn:eim:linkrel:logoff:
          href: https://openapi-generator.tech
      properties:
        self:
          $ref: '#/components/schemas/linkHref'
        urn:eim:linkrel:logoff:
          $ref: '#/components/schemas/_session_get_200_response__links_urn_eim_linkrel_logoff'
      type: object
    _session_get_200_response:
      example:
        _links:
          self:
            href: https://openapi-generator.tech
          urn:eim:linkrel:logoff:
            href: https://openapi-generator.tech
        returnStatus:
          server: server
          code: code
          substatus: 6
          message: message
          status: 0
        id: id
        title: title
      properties:
        returnStatus:
          $ref: '#/components/schemas/returnStatusBody'
        id:
          type: string
        title:
          description: Localized based on Accept-Language.
          type: string
        _links:
          $ref: '#/components/schemas/_session_get_200_response__links'
      type: object
    _session_tables_get_200_response_allOf__embedded_collection_inner:
      allOf:
      - $ref: '#/components/schemas/baseEmbedded'
      - properties:
          title:
            description: Display name of the table.
            type: string
        type: object
    _session_tables_get_200_response_allOf__embedded:
      properties:
        collection:
          items:
            $ref: '#/components/schemas/_session_tables_get_200_response_allOf__embedded_collection_inner'
          type: array
      type: object
    _session_tables_get_200_response:
      allOf:
      - $ref: '#/components/schemas/baseHalJsonResponseForBatches'
      - properties:
          _embedded:
            $ref: '#/components/schemas/_session_tables_get_200_response_allOf__embedded'
        type: object
    _session_tables__tableId__get_200_response:
      allOf:
      - $ref: '#/components/schemas/baseHalJsonResponse'
      - $ref: '#/components/schemas/tableItemContent'
    _session_doctypes_get_200_response_allOf__embedded_collection_inner:
      allOf:
      - $ref: '#/components/schemas/baseEmbedded'
      - properties:
          title:
            description: Not localized. Name of the Document Type.
            type: string
          env:
            $ref: '#/components/schemas/env'
    _session_doctypes_get_200_response_allOf__embedded:
      properties:
        collection:
          items:
            $ref: '#/components/schemas/_session_doctypes_get_200_response_allOf__embedded_collection_inner'
          type: array
      type: object
    _session_doctypes_get_200_response:
      allOf:
      - $ref: '#/components/schemas/baseHalJsonResponse'
      - properties:
          _embedded:
            $ref: '#/components/schemas/_session_doctypes_get_200_response_allOf__embedded'
        type: object
    _session_doctypes__docType__get_200_response:
      allOf:
      - $ref: '#/components/schemas/baseHalJsonResponse'
      - properties:
          title:
            description: Name of the Document Type resource.
            type: string
        type: object
      - $ref: '#/components/schemas/docItemContent'
    _session_files_post_201_response:
      example:
        src: https://openapi-generator.tech
        returnStatus:
          server: server
          code: code
          substatus: 6
          message: message
          status: 0
        id: id
        contentType: contentType
        updated: 2000-01-23T04:56:07.000+00:00
      properties:
        returnStatus:
          $ref: '#/components/schemas/returnStatusBody'
        id:
          description: The file handle ID in the current session.
          type: string
        contentType:
          description: The media type for the file.
          type: string
        src:
          description: URI for direct access to file data.
          format: uri
          type: string
        updated:
          description: ISO 8601 date-time string of the last update.
          format: date-time
          type: string
      type: object
    _session_batches_post_request_nodes_inner:
      properties:
        nodeId:
          description: Required integer. Has to be non-zero.
          type: integer
        parentId:
          description: "Required integer. 0 for parentId implies root node. If parentId\
            \ is -1, then this means delete the node and its children."
          type: integer
      type: object
    _session_batches_post_request_values_inner:
      properties:
        nodeId:
          description: Required integer. The nodeId must exist.
          type: integer
        valueName:
          description: Required string. The name of the value.
          type: string
        value:
          description: Required object. See valueType for valid types.
          type: string
        valueType:
          description: "Required string. Must be one of \"int\", \"double\", \"string\"\
            , \"bool\", \"datetime\", \"file\", or \"uimdata\". \"int\" – value can\
            \ be integer or string. \"double\" - value can be either number or literal\
            \ invariant culture string. \"bool\" - value must be sent as literal \"\
            true\" or \"false\". \"datetime\" - value must be ISO 8601 string. \"\
            file\" - value must be sent as a base64 encoded string or a valid fileId.\
            \ \"uimdata\" – value must be the UimData JSON object."
          enum:
          - int
          - double
          - string
          - bool
          - datetime
          - file
          - uimdata
          type: string
        offset:
          description: Optional integer. Used only if valueType is "file". Offset
            is used to add or replace a chunk. Chunks must be added without gaps.
            First chunk must start at offset 0.
          type: integer
        fileExtension:
          description: "Optional string. Used if valueType=\"file\" and offset is\
            \ 0. Examples \"doc\", \"png\", \"tif\", \"tiff\", \"jpg\"."
          type: string
      type: object
    _session_batches_post_request:
      properties:
        env:
          $ref: '#/components/schemas/env'
        captureFlow:
          description: CaptureFlow name. Required only of exportType is "IAServer"
          type: string
        batchName:
          description: Required string. Batch name (schema available). Has to be unique.
          type: string
        batchRootLevel:
          description: "Required Integer. 0 based, must be between 1 and 7."
          maximum: 7
          minimum: 1
          type: integer
        batchPriority:
          default: 50
          description: "Batch priority. It must be between 0 and 100. If not supplied,\
            \ it will default to 50. This is only used when exporting to an Intelligent\
            \ Capture Server"
          maximum: 100
          minimum: 0
          type: integer
        exportType:
          default: AutoFormatLocal
          description: "One of \"AutoFormatLocal\", \"AutoFormatFtp\", \"Custom\"\
            , \"IAServer\". Default value is \"AutoFormatLocal\"."
          enum:
          - AutoFormatLocal
          - AutoFormatFtp
          - Custom
          - IAServer
          type: string
        pdfGeneration:
          default: None
          description: "One of \"None\", \"OnePerDocument\", \"OnePerFolder\". Default\
            \ is \"None\"."
          enum:
          - None
          - OnePerDocument
          - OnePerFolder
          type: string
        ftpConnection:
          description: Required only if exportType is "AutoFormatFtp".
          type: string
        autoFormatExcludeImages:
          description: Required if exportType is "AutoFormatLocal" or "AutoFormatFtp".
          type: boolean
        iAServerConnection:
          description: Required only if exportType is "IAServer".
          type: string
        machineId:
          description: Id of machine creating this batch.
          type: string
        dispatch:
          default: A
          description: "One \"S\" or \"A\", Default is \"S\". S – Synchronous, A -\
            \ Asynchronous"
          enum:
          - S
          - A
          type: string
        nodes:
          description: Required. Nodes are processed in given order.
          items:
            $ref: '#/components/schemas/_session_batches_post_request_nodes_inner'
          type: array
        values:
          description: Values are processed in the given order and the last writer
            wins.
          items:
            $ref: '#/components/schemas/_session_batches_post_request_values_inner'
          type: array
      required:
      - batchName
      - batchRootLevel
      - env
      - nodes
      type: object
    _session_batches_post_201_response:
      allOf:
      - $ref: '#/components/schemas/baseHalJsonResponse'
      - $ref: '#/components/schemas/batchItemContent'
    _session_services_get_200_response:
      allOf:
      - $ref: '#/components/schemas/baseHalJsonResponse'
      - properties:
          _embedded:
            $ref: '#/components/schemas/embeddedServiceLinks'
        type: object
    _session_services_convertimages_post_200_response:
      allOf:
      - $ref: '#/components/schemas/commonServiceResponse'
      - $ref: '#/components/schemas/licensePercent'
      - $ref: '#/components/schemas/licenseUsed'
      - $ref: '#/components/schemas/resultItemsBasicWithValuesAndFilesArray'
    _session_services_fullpageocr_post_200_response:
      allOf:
      - $ref: '#/components/schemas/commonServiceResponse'
      - $ref: '#/components/schemas/licensePercent'
      - $ref: '#/components/schemas/resultItemsBasicWithFilesArray'
    _session_services_classifyextractpage_post_200_response:
      allOf:
      - $ref: '#/components/schemas/commonServiceResponse'
      - $ref: '#/components/schemas/licensePercent'
      - $ref: '#/components/schemas/licenseUsed'
      - $ref: '#/components/schemas/resultItemsBasicWithValuesArray'
    _session_services_uimdata_post_200_response:
      allOf:
      - $ref: '#/components/schemas/commonServiceResponse'
      - $ref: '#/components/schemas/licensePercent'
      - $ref: '#/components/schemas/resultItemsBasicWithValuesArray'
    _session_services_processimagepipeline_post_200_response:
      allOf:
      - $ref: '#/components/schemas/commonServiceResponse'
      - $ref: '#/components/schemas/licenseUsed'
      - $ref: '#/components/schemas/resultItemsBasicWithValuesAndFilesArray'
    resourceLinks_self:
      description: The href will match the URI used to retrieve this.
      properties:
        href:
          format: uri
          type: string
      type: object
    embeddedServiceLinksContent_content:
      description: JSON object representing the content for this entry.
      properties:
        name:
          description: Not localized. Name of the Real-Time Service.
          format: uri
          type: string
        version:
          description: The version number for the Real-Time Service.
          type: string
      type: object
    embeddedServiceLinks_collection_inner:
      allOf:
      - $ref: '#/components/schemas/baseEmbedded'
      - $ref: '#/components/schemas/embeddedServiceLinksContent'
    servicesRequestBody_serviceProps_inner_value:
      oneOf:
      - type: string
      - type: number
      - type: integer
      - type: boolean
    servicesRequestBody_serviceProps_inner:
      properties:
        name:
          type: string
        value:
          $ref: '#/components/schemas/servicesRequestBody_serviceProps_inner_value'
      type: object
    servicesRequestBody_requestItems_inner_files_inner:
      properties:
        name:
          type: string
        value:
          type: string
        contentType:
          type: string
        fileType:
          type: string
      type: object
    servicesRequestBody_requestItems_inner:
      properties:
        nodeId:
          type: integer
        values:
          items:
            $ref: '#/components/schemas/servicesRequestBody_serviceProps_inner'
          type: array
        files:
          items:
            $ref: '#/components/schemas/servicesRequestBody_requestItems_inner_files_inner'
          type: array
      type: object
    resultItemFiles_files_inner:
      properties:
        name:
          type: string
        value:
          type: string
        contentType:
          type: string
        src:
          type: string
        fileType:
          type: string
      type: object
    uimData_nodeList_inner_data_inner_fieldError:
      description: This contains the error information for the field
      properties:
        errorCode:
          description: The error code string assigned to the field.
          type: string
        recoverable:
          description: "True if the error is recoverable; otherwise, false."
          type: boolean
        message:
          description: The error message.
          type: string
      type: object
    uimData_nodeList_inner_data_inner_choices_inner:
      properties:
        name:
          description: The name of the choice.
          type: string
        value:
          description: The value of the choice.
          type: string
      type: object
    uimData_nodeList_inner_data_inner_locationRect:
      description: Field location on image information.
      properties:
        left:
          type: integer
        top:
          type: integer
        width:
          type: integer
        height:
          type: integer
      type: object
    uimData_nodeList_inner_data_inner_extractedCharacters_inner_values_inner:
      properties:
        value:
          description: The character hypothesis value.
          type: string
        confidence:
          description: The character hypothesis accuracy confidence as a percent between
            0 and 100.
          type: integer
      type: object
    uimData_nodeList_inner_data_inner_extractedCharacters_inner:
      properties:
        values:
          description: The character hypotheses.
          items:
            $ref: '#/components/schemas/uimData_nodeList_inner_data_inner_extractedCharacters_inner_values_inner'
          type: array
      type: object
    uimData_nodeList_inner_data_inner:
      properties:
        arrayIndex:
          description: "If the field is an array field, this is the array index."
          type: integer
        value:
          description: The value of the field.
          type: object
        fieldError:
          $ref: '#/components/schemas/uimData_nodeList_inner_data_inner_fieldError'
        mustConfirm:
          description: "True if the user must confirm; otherwise, false."
          type: boolean
        choices:
          items:
            $ref: '#/components/schemas/uimData_nodeList_inner_data_inner_choices_inner'
          type: array
        locationRect:
          $ref: '#/components/schemas/uimData_nodeList_inner_data_inner_locationRect'
        pageId:
          description: "The ID of the page on which this field value is found. In\
            \ the learning call, the 0-based page number in the document."
          type: integer
        confidence:
          description: Extracted data accuracy confidence as a percent between 0 and
            100.
          type: integer
        extractedCharacters:
          description: This contains information about each extracted character.
          items:
            $ref: '#/components/schemas/uimData_nodeList_inner_data_inner_extractedCharacters_inner'
          type: array
      type: object
    uimData_nodeList_inner:
      properties:
        name:
          description: Name of the field
          type: string
        isArray:
          description: "True if this is an array field; otherwise, false."
          type: boolean
        indexFieldType:
          description: "Specifies the type of field. Will be one of \"number\", \"\
            string\", \"boolean\", \"datetime\"."
          enum:
          - number
          - string
          - boolean
          - datetime
          type: string
        labelText:
          description: The label for the field to show in the UI.
          type: string
        isRequired:
          description: "True if this is a required field; otherwise, false."
          type: boolean
        controlType:
          description: "This will be the type of UI control. Will be one of \"TextBox\"\
            , \"ChoiceText\", \"ListBox\", \"CheckBox\", \"ComboBox\"."
          enum:
          - TextBox
          - ChoiceText
          - ListBox
          - CheckBox
          - ComboBox
          type: string
        data:
          description: Contains all the data for the field(s).
          items:
            $ref: '#/components/schemas/uimData_nodeList_inner_data_inner'
          type: array
      type: object
    tableItemContent_content:
      description: JSON object representing the content for this entry.
      properties:
        id:
          description: Unique identifier for the table.
          type: string
        tableName:
          description: Localized display name of the table.
          type: string
        fieldNames:
          description: A comma-delimited list of names for each column.
          items:
            type: string
          type: array
        rows:
          items:
            description: "Array of objects JSON encoded (string, int, array, object,\
              \ etc). Eg. [123,\"text\",[1,2,3],{\"name\":\"value\"}]"
            items:
              type: string
            type: array
          type: array
      type: object
    docItemContent_content_fields_inner_uiControlInfo_rectangle:
      description: "Rectangle identified by values in the order of Left, Top, Width,\
        \ and Height. All values are Pixels with a resolution of 96 dpi in both X\
        \ and Y direction."
      properties:
        left:
          type: integer
        top:
          type: integer
        width:
          type: integer
        height:
          type: integer
      type: object
    docItemContent_content_fields_inner_uiControlInfo:
      description: Information about the control for the field.
      properties:
        controlType:
          enum:
          - TextBox
          - ChoiceText
          - ListBox
          - CheckBox
          - ComboBox
          type: string
        labelText:
          description: The label for the field.
          type: string
        tooltip:
          description: The tooltip for the field.
          type: string
        choices:
          items:
            $ref: '#/components/schemas/uimData_nodeList_inner_data_inner_choices_inner'
          type: array
        multiLine:
          description: True for a multiline TextBox; otherwise false.
          type: boolean
        rectangle:
          $ref: '#/components/schemas/docItemContent_content_fields_inner_uiControlInfo_rectangle'
        labelRectangle:
          $ref: '#/components/schemas/docItemContent_content_fields_inner_uiControlInfo_rectangle'
      type: object
    docItemContent_content_fields_inner:
      properties:
        name:
          description: Name of the field
          type: string
        isArray:
          description: Whether the field is an array field.
          type: boolean
        indexFieldType:
          description: "Type of field (Number, String, Boolean, DateTime)"
          enum:
          - Number
          - String
          - Boolean
          - DateTime
          type: string
        sectionName:
          description: "Form section name to which this field belongs. If field is\
            \ an array type, then this is the table name."
          type: string
        indexLevel:
          description: "Used only in the context of hierarchical collection of documents.\
            \ The level must be between 1 and 7. If the level is higher than 1, then\
            \ it is assumed that any changes must propagate to all siblings in the\
            \ context of ancestor at that higher level."
          type: integer
        confirmKind:
          description: "Confirmation kind. One of NeverConfirm, AlwaysConfirm, ConfirmOnEmpty."
          enum:
          - NeverConfirm
          - AlwaysConfirm
          - ConfirmOnEmpty
          type: string
        isReadOnly:
          description: Is the field read only?
          type: boolean
        isRequried:
          description: Is this a required field?
          type: boolean
        minValue:
          description: "Minimum value for the field. If null, no lower bound. In case\
            \ of datetime, value is represented as double .NET OADate. In case of\
            \ strings, min length."
          type: string
        maxValue:
          description: "Maximum value for the field. If null, no upper bound. In case\
            \ of datetime, value is represented as double .NET OADate. In case of\
            \ strings, max length."
          type: string
        restrictionMask:
          description: The Restriction mask pattern for validating strings. Empty
            means no pattern check. This is a regex expression equivalent to restriction
            mask pattern.
          type: string
        viewFormat:
          description: "Holds the format string for date and time fields. The format\
            \ string utilizes Microsoft .NET Framework 4.5.2 custom date and time\
            \ format specifiers. Standard format strings are not supported. Example\
            \ \"dd-MM-yyyy hh:mm:ss tt\" should be rendered by the client as, \"27-10-2009\
            \ 10:47:50 AM\"."
          type: string
        checkDateFromNow:
          description: "If true and the datatype for the field is DateTime and range\
            \ check is enabled through Min, Max values, the Min and Max values are\
            \ interpreted as time span and are validated with reference to Now().\
            \ If false and the datatype is DateTime then Min and Max are interpreted\
            \ as absolute date time values."
          type: boolean
        uiControlInfo:
          $ref: '#/components/schemas/docItemContent_content_fields_inner_uiControlInfo'
        isPopulationTrigger:
          description: "If true, specifies that this field is a dependent field for\
            \ one or more population rules in the Document Type definition. This will\
            \ be false for only one-time rules."
          type: boolean
        optionsPopulatedBy:
          description: "This is an array of string field names that when any of the\
            \ fields specified changes, then it should cause the valid options for\
            \ this field to change. This is not applicable for only one-time rules."
          items:
            type: string
          type: array
        extractFirstValue:
          description: "If true, then document level extractions will use values from\
            \ the first page where a non-empty value is found; otherwise, it will\
            \ use the field from the last page where a non-empty value is found."
          type: boolean
        isCalculationTarget:
          description: "If true, specifies that this field is a data calculation target\
            \ field. This will be false for only one-time rules."
          type: boolean
        sampleRect:
          description: "Field Sample rectangle indicating field position in an image.\
            \ A comma separated list of double values for left, top, width and height.\
            \ All values are in units of 1/96 inch"
          type: string
        samplePageId:
          description: Field sample page id.
          type: string
      type: object
    docItemContent_content:
      properties:
        id:
          description: ID of the Document Type.
          type: string
        name:
          description: Name of the Document Type resource.
          type: string
        locale:
          description: The culture of the Document Type
          type: string
        description:
          description: The description given for the Document Type.
          type: string
        project:
          default: Default
          description: The recognition project name associated with the Document Type.
          type: string
        env:
          $ref: '#/components/schemas/env'
        fields:
          items:
            $ref: '#/components/schemas/docItemContent_content_fields_inner'
          type: array
      type: object
    batchItemContent_content:
      description: JSON object representing the content for this entry.
      properties:
        id:
          description: Batch handle ID only for the current session.
          type: string
        batchName:
          description: Not localized. Name of batch given by the creator.
          type: string
        status:
          description: |-
            C - Batch created. Caller may add values.
            P - Pending Dispatch. No more changes may be made.
            S - Batch was sent to the server successfully.
            E - Final attempt failed. Batch will not be sent anymore
          enum:
          - C
          - P
          - S
          - E
          type: string
        serverBatchId:
          description: ID created in InputAccel server. Empty if not sent to InputAccel
            server.
          type: string
        captureFlow:
          description: Name of the InputAccel CaptureFlow associated with the batch
          type: string
        batchRootLevel:
          description: Batch root level
          type: integer
        batchPriority:
          description: batch priority between 1 and 100. default 50.
          type: integer
        lastUpdate:
          description: ISO 8601 date-time string of the last update.
          format: date-time
          type: string
        lastError:
          description: Last error message.
          type: string
        localExportFileId:
          description: Local export (download to local machine) zip file Url.
          type: string
      type: object
  securitySchemes:
    capture.ot2.opentext.com:
      flows:
        clientCredentials:
          scopes: {}
          tokenUrl: https://otdsauth.ot2.opentext.com/oauth2/token
      type: oauth2
    capture.ot2.opentext.eu:
      flows:
        clientCredentials:
          scopes: {}
          tokenUrl: https://otdsauth.ot2.opentext.eu/oauth2/token
      type: oauth2
    na-1.api.opentext.com:
      openIdConnectUrl: https://na-1.api.opentext.com/tenants/$tenantId/.well-known/openid-configuration/
      type: openIdConnect
    eu-1.api.opentext.com:
      openIdConnectUrl: https://eu-1.api.opentext.com/tenants/$tenantId/.well-known/openid-configuration/
      type: openIdConnect
    na-1-dev.api.opentext.com:
      bearerFormat: jwt
      scheme: bearer
      type: http

