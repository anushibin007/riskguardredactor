/*
 * Core Capture Services
 * OpenText Core Capture Services are a set of RESTful web service interfaces that provides capture functionality. Being developed in a purely RESTful style, Core Capture Services are easier to consume for the purposes of writing custom clients.  Core Capture Services identifies resources by Uniform Resource Identifiers (URIs). It defines specific media types to represent resources and drives application state transfers by using link relations. It uses a limited number of HTTP standard methods (GET, POST, and DELETE) to manipulate these resources over the HTTP protocol.  Core Capture Services (hereafter simply called, \"service\") supports only the JSON format for resource representation. JavaScript Object Notation (JSON) is a lightweight data interchange format based on a subset of the JavaScript Programming Language standard.
 *
 * The version of the OpenAPI document: 23.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ot2.corecapture;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ot2.corecapture.UimDataNodeListInnerDataInner;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for UimDataNodeListInner
 */
public class UimDataNodeListInnerTest {
    private final UimDataNodeListInner model = new UimDataNodeListInner();

    /**
     * Model tests for UimDataNodeListInner
     */
    @Test
    public void testUimDataNodeListInner() {
        // TODO: test UimDataNodeListInner
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'isArray'
     */
    @Test
    public void isArrayTest() {
        // TODO: test isArray
    }

    /**
     * Test the property 'indexFieldType'
     */
    @Test
    public void indexFieldTypeTest() {
        // TODO: test indexFieldType
    }

    /**
     * Test the property 'labelText'
     */
    @Test
    public void labelTextTest() {
        // TODO: test labelText
    }

    /**
     * Test the property 'isRequired'
     */
    @Test
    public void isRequiredTest() {
        // TODO: test isRequired
    }

    /**
     * Test the property 'controlType'
     */
    @Test
    public void controlTypeTest() {
        // TODO: test controlType
    }

    /**
     * Test the property 'data'
     */
    @Test
    public void dataTest() {
        // TODO: test data
    }

}
