/*
 * Core Capture Services
 * OpenText Core Capture Services are a set of RESTful web service interfaces that provides capture functionality. Being developed in a purely RESTful style, Core Capture Services are easier to consume for the purposes of writing custom clients.  Core Capture Services identifies resources by Uniform Resource Identifiers (URIs). It defines specific media types to represent resources and drives application state transfers by using link relations. It uses a limited number of HTTP standard methods (GET, POST, and DELETE) to manipulate these resources over the HTTP protocol.  Core Capture Services (hereafter simply called, \"service\") supports only the JSON format for resource representation. JavaScript Object Notation (JSON) is a lightweight data interchange format based on a subset of the JavaScript Programming Language standard.
 *
 * The version of the OpenAPI document: 23.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ot2.corecapture.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ot2.corecapture.model.Get200ResponseLinksAbout;
import com.ot2.corecapture.model.Get200ResponseLinksOauth2Authorize;
import com.ot2.corecapture.model.Get200ResponseLinksOauth2Token;
import com.ot2.corecapture.model.Get200ResponseLinksUrnEimLinkrelDataBatches;
import com.ot2.corecapture.model.Get200ResponseLinksUrnEimLinkrelDoctypes;
import com.ot2.corecapture.model.Get200ResponseLinksUrnEimLinkrelFiles;
import com.ot2.corecapture.model.Get200ResponseLinksUrnEimLinkrelServices;
import com.ot2.corecapture.model.Get200ResponseLinksUrnEimLinkrelSession;
import com.ot2.corecapture.model.Get200ResponseLinksUrnEimLinkrelTables;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Get200ResponseLinks
 */
public class Get200ResponseLinksTest {
    private final Get200ResponseLinks model = new Get200ResponseLinks();

    /**
     * Model tests for Get200ResponseLinks
     */
    @Test
    public void testGet200ResponseLinks() {
        // TODO: test Get200ResponseLinks
    }

    /**
     * Test the property 'urnColonEimColonLinkrelColonSession'
     */
    @Test
    public void urnColonEimColonLinkrelColonSessionTest() {
        // TODO: test urnColonEimColonLinkrelColonSession
    }

    /**
     * Test the property 'urnColonEimColonLinkrelColonTables'
     */
    @Test
    public void urnColonEimColonLinkrelColonTablesTest() {
        // TODO: test urnColonEimColonLinkrelColonTables
    }

    /**
     * Test the property 'urnColonEimColonLinkrelColonDataBatches'
     */
    @Test
    public void urnColonEimColonLinkrelColonDataBatchesTest() {
        // TODO: test urnColonEimColonLinkrelColonDataBatches
    }

    /**
     * Test the property 'urnColonEimColonLinkrelColonFiles'
     */
    @Test
    public void urnColonEimColonLinkrelColonFilesTest() {
        // TODO: test urnColonEimColonLinkrelColonFiles
    }

    /**
     * Test the property 'urnColonEimColonLinkrelColonServices'
     */
    @Test
    public void urnColonEimColonLinkrelColonServicesTest() {
        // TODO: test urnColonEimColonLinkrelColonServices
    }

    /**
     * Test the property 'urnColonEimColonLinkrelColonDoctypes'
     */
    @Test
    public void urnColonEimColonLinkrelColonDoctypesTest() {
        // TODO: test urnColonEimColonLinkrelColonDoctypes
    }

    /**
     * Test the property 'about'
     */
    @Test
    public void aboutTest() {
        // TODO: test about
    }

    /**
     * Test the property 'oauth2Token'
     */
    @Test
    public void oauth2TokenTest() {
        // TODO: test oauth2Token
    }

    /**
     * Test the property 'oauth2Authorize'
     */
    @Test
    public void oauth2AuthorizeTest() {
        // TODO: test oauth2Authorize
    }

}
